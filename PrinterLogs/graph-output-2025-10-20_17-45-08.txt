--------------------------------------------------
Graph Debug Output
--------------------------------------------------
Class: MySingleton (Abstract=False)
  Class: MySingleton --[HasField]--> Field: _instance
    Field: MySingleton._instance (private static MySingleton)
      Field: _instance --[Uses]--> Class: MySingleton
  Class: MySingleton --[HasConstructor]--> Constructor: MySingleton..ctor
    Constructor: MySingleton..ctor
      Constructor: MySingleton..ctor --[HasConstructor]--> Constructor: MySingleton..ctor
  Class: MySingleton --[HasProperty]--> Property: Instance
    Property: Instance
      Property: Instance --[ReferencesField]--> Field: _instance
      Property: Instance --[Uses]--> Class: MySingleton
Class: DocumentContext (Abstract=False)
  Class: DocumentContext --[HasField]--> Field: _state
    Field: DocumentContext._state (private IDocumentState)
  Class: DocumentContext --[HasMethod]--> Method: SetState
    Method: SetState (Returns Void, Abstract=False)
      Method: SetState --[ReferencesField]--> Field: _state
  Class: DocumentContext --[HasMethod]--> Method: Publish
    Method: Publish (Returns Void, Abstract=False)
      Method: Publish --[Calls]--> Method: Publish
        Method: Publish (Returns Void, Abstract=True)
          Method: Publish --[Uses]--> Class: DocumentContext
          Method: Publish --[ImplementedBy]--> Method: Publish
            Method: Publish (Returns Void, Abstract=False)
              Method: Publish --[Uses]--> Class: DocumentContext
          Method: Publish --[ImplementedBy]--> Method: Publish
            Method: Publish (Returns Void, Abstract=False)
              Method: Publish --[Uses]--> Class: DocumentContext
              Method: Publish --[Calls]--> Method: SetState
              Method: Publish --[Creates]--> Class: PublishedState
                Class: PublishedState (Abstract=False)
                  Class: PublishedState --[Implements]--> Interface: IDocumentState
                    Interface: IDocumentState
                  Class: PublishedState --[HasMethod]--> Method: Publish
                  Class: PublishedState --[HasMethod]--> Method: Reject
                    Method: Reject (Returns Void, Abstract=False)
                      Method: Reject --[Uses]--> Class: DocumentContext
          Method: Publish --[ImplementedBy]--> Method: Publish
            Method: Publish (Returns Void, Abstract=False)
              Method: Publish --[Uses]--> Class: DocumentContext
              Method: Publish --[Calls]--> Method: SetState
              Method: Publish --[Creates]--> Class: ReviewState
                Class: ReviewState (Abstract=False)
                  Class: ReviewState --[Implements]--> Interface: IDocumentState
                  Class: ReviewState --[HasMethod]--> Method: Publish
                  Class: ReviewState --[HasMethod]--> Method: Reject
                    Method: Reject (Returns Void, Abstract=False)
                      Method: Reject --[Uses]--> Class: DocumentContext
                      Method: Reject --[Calls]--> Method: SetState
                      Method: Reject --[Creates]--> Class: DraftState
                        Class: DraftState (Abstract=False)
                          Class: DraftState --[Implements]--> Interface: IDocumentState
                          Class: DraftState --[HasMethod]--> Method: Publish
                          Class: DraftState --[HasMethod]--> Method: Reject
                            Method: Reject (Returns Void, Abstract=False)
                              Method: Reject --[Uses]--> Class: DocumentContext
      Method: Publish --[ReferencesField]--> Field: _state
  Class: DocumentContext --[HasMethod]--> Method: Reject
    Method: Reject (Returns Void, Abstract=False)
      Method: Reject --[Calls]--> Method: Reject
        Method: Reject (Returns Void, Abstract=True)
          Method: Reject --[Uses]--> Class: DocumentContext
          Method: Reject --[ImplementedBy]--> Method: Reject
          Method: Reject --[ImplementedBy]--> Method: Reject
          Method: Reject --[ImplementedBy]--> Method: Reject
      Method: Reject --[ReferencesField]--> Field: _state
Class: MediaPlayerContext (Abstract=False)
  Class: MediaPlayerContext --[HasField]--> Field: _state
    Field: MediaPlayerContext._state (private IPlayerState)
  Class: MediaPlayerContext --[HasMethod]--> Method: SetState
    Method: SetState (Returns Void, Abstract=False)
      Method: SetState --[ReferencesField]--> Field: _state
  Class: MediaPlayerContext --[HasMethod]--> Method: Play
    Method: Play (Returns Void, Abstract=False)
      Method: Play --[Calls]--> Method: Play
        Method: Play (Returns Void, Abstract=True)
          Method: Play --[Uses]--> Class: MediaPlayerContext
          Method: Play --[ImplementedBy]--> Method: Play
            Method: Play (Returns Void, Abstract=False)
              Method: Play --[Uses]--> Class: MediaPlayerContext
              Method: Play --[Calls]--> Method: SetState
              Method: Play --[Creates]--> Class: PlayingState
                Class: PlayingState (Abstract=False)
                  Class: PlayingState --[Implements]--> Interface: IPlayerState
                    Interface: IPlayerState
                  Class: PlayingState --[HasMethod]--> Method: Play
                    Method: Play (Returns Void, Abstract=False)
                      Method: Play --[Uses]--> Class: MediaPlayerContext
                  Class: PlayingState --[HasMethod]--> Method: Pause
                    Method: Pause (Returns Void, Abstract=False)
                      Method: Pause --[Uses]--> Class: MediaPlayerContext
                      Method: Pause --[Calls]--> Method: SetState
                      Method: Pause --[Creates]--> Class: PausedState
                        Class: PausedState (Abstract=False)
                          Class: PausedState --[Implements]--> Interface: IPlayerState
                          Class: PausedState --[HasMethod]--> Method: Play
                          Class: PausedState --[HasMethod]--> Method: Pause
                            Method: Pause (Returns Void, Abstract=False)
                              Method: Pause --[Uses]--> Class: MediaPlayerContext
          Method: Play --[ImplementedBy]--> Method: Play
      Method: Play --[ReferencesField]--> Field: _state
  Class: MediaPlayerContext --[HasMethod]--> Method: Pause
    Method: Pause (Returns Void, Abstract=False)
      Method: Pause --[Calls]--> Method: Pause
        Method: Pause (Returns Void, Abstract=True)
          Method: Pause --[Uses]--> Class: MediaPlayerContext
          Method: Pause --[ImplementedBy]--> Method: Pause
          Method: Pause --[ImplementedBy]--> Method: Pause
      Method: Pause --[ReferencesField]--> Field: _state
Class: TrafficLightContext (Abstract=False)
  Class: TrafficLightContext --[HasField]--> Field: _state
    Field: TrafficLightContext._state (private ILightState)
  Class: TrafficLightContext --[HasConstructor]--> Constructor: TrafficLightContext..ctor
    Constructor: TrafficLightContext..ctor
      Constructor: TrafficLightContext..ctor --[HasConstructor]--> Constructor: TrafficLightContext..ctor
  Class: TrafficLightContext --[HasMethod]--> Method: SetState
    Method: SetState (Returns Void, Abstract=False)
      Method: SetState --[ReferencesField]--> Field: _state
  Class: TrafficLightContext --[HasMethod]--> Method: Request
    Method: Request (Returns Void, Abstract=False)
      Method: Request --[Calls]--> Method: Handle
        Method: Handle (Returns Void, Abstract=True)
          Method: Handle --[Uses]--> Class: TrafficLightContext
          Method: Handle --[ImplementedBy]--> Method: Handle
            Method: Handle (Returns Void, Abstract=False)
              Method: Handle --[Uses]--> Class: TrafficLightContext
              Method: Handle --[Calls]--> Method: SetState
              Method: Handle --[Creates]--> Class: RedState
                Class: RedState (Abstract=False)
                  Class: RedState --[Implements]--> Interface: ILightState
                    Interface: ILightState
                  Class: RedState --[HasMethod]--> Method: Handle
                    Method: Handle (Returns Void, Abstract=False)
                      Method: Handle --[Uses]--> Class: TrafficLightContext
                      Method: Handle --[Calls]--> Method: SetState
                      Method: Handle --[Creates]--> Class: GreenState
                        Class: GreenState (Abstract=False)
                          Class: GreenState --[Implements]--> Interface: ILightState
                          Class: GreenState --[HasMethod]--> Method: Handle
                            Method: Handle (Returns Void, Abstract=False)
                              Method: Handle --[Uses]--> Class: TrafficLightContext
                              Method: Handle --[Calls]--> Method: SetState
                              Method: Handle --[Creates]--> Class: YellowState
                                Class: YellowState (Abstract=False)
                                  Class: YellowState --[Implements]--> Interface: ILightState
                                  Class: YellowState --[HasMethod]--> Method: Handle
          Method: Handle --[ImplementedBy]--> Method: Handle
          Method: Handle --[ImplementedBy]--> Method: Handle
      Method: Request --[ReferencesField]--> Field: _state
Class: ClassNodeBuilder (Abstract=False)
  Class: ClassNodeBuilder --[Implements]--> Interface: INodeBuilder
    Interface: INodeBuilder
  Class: ClassNodeBuilder --[HasProperty]--> Property: NodeType
    Property: NodeType
  Class: ClassNodeBuilder --[HasMethod]--> Method: BuildNodes
    Method: BuildNodes (Returns IEnumerable, Abstract=False)
      Method: BuildNodes --[Uses]--> Class: GraphContext
        Class: GraphContext (Abstract=False)
          Class: GraphContext --[HasField]--> Field: _registry
            Field: GraphContext._registry (private readonly NodeRegistry)
              Field: _registry --[Uses]--> Class: NodeRegistry
                Class: NodeRegistry (Abstract=False)
                  Class: NodeRegistry --[HasField]--> Field: _nodes
                    Field: NodeRegistry._nodes (private readonly Dictionary)
                  Class: NodeRegistry --[HasField]--> Field: _byType
                    Field: NodeRegistry._byType (private readonly Dictionary)
                  Class: NodeRegistry --[HasMethod]--> Method: AddNode
                    Method: AddNode (Returns Void, Abstract=False)
                      Method: AddNode --[ReferencesField]--> Field: _nodes
                      Method: AddNode --[Calls]--> Method: GetBaseTypes
                        Method: GetBaseTypes (Returns IEnumerable, Abstract=False)
                      Method: AddNode --[ReferencesField]--> Field: _byType
                  Class: NodeRegistry --[HasMethod]--> Method: GetBaseTypes
                  Class: NodeRegistry --[HasMethod]--> Method: GetNode
                    Method: GetNode (Returns T, Abstract=False)
                      Method: GetNode --[ReferencesField]--> Field: _nodes
                  Class: NodeRegistry --[HasMethod]--> Method: GetAll
                    Method: GetAll (Returns IEnumerable, Abstract=False)
                      Method: GetAll --[ReferencesField]--> Field: _byType
          Class: GraphContext --[HasField]--> Field: _semanticModels
            Field: GraphContext._semanticModels (private readonly Dictionary)
          Class: GraphContext --[HasField]--> Field: _roots
            Field: GraphContext._roots (private readonly Dictionary)
          Class: GraphContext --[HasConstructor]--> Constructor: GraphContext..ctor
            Constructor: GraphContext..ctor
              Constructor: GraphContext..ctor --[HasConstructor]--> Constructor: GraphContext..ctor
          Class: GraphContext --[HasMethod]--> Method: GetRoot
            Method: GetRoot (Returns SyntaxNode, Abstract=False)
              Method: GetRoot --[ReferencesField]--> Field: _roots
      Method: BuildNodes --[Calls]--> Method: GetRoot
      Method: BuildNodes --[Creates]--> Class: ClassNode
        Class: ClassNode (Abstract=False)
          Class: ClassNode --[Implements]--> Interface: IAnalyzerNode
            Interface: IAnalyzerNode
              Interface: IAnalyzerNode --[Inherits]--> Interface: INode
                Interface: INode
          Class: ClassNode --[HasProperty]--> Property: SyncRoot
            Property: SyncRoot
          Class: ClassNode --[HasProperty]--> Property: ClassSyntax
            Property: ClassSyntax
          Class: ClassNode --[HasProperty]--> Property: NodeType
            Property: NodeType
          Class: ClassNode --[HasProperty]--> Property: Symbol
            Property: Symbol
          Class: ClassNode --[HasProperty]--> Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
            Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
          Class: ClassNode --[HasProperty]--> Property: IsAbstract
            Property: IsAbstract
          Class: ClassNode --[HasProperty]--> Property: Edges
            Property: Edges
          Class: ClassNode --[HasPropertyElement]--> Class: EdgeNode
            Class: EdgeNode (Abstract=False)
              Class: EdgeNode --[HasProperty]--> Property: SyncRoot
                Property: SyncRoot
              Class: EdgeNode --[HasProperty]--> Property: Target
                Property: Target
              Class: EdgeNode --[HasProperty]--> Property: NodeType
                Property: NodeType
              Class: EdgeNode --[HasProperty]--> Property: Type
                Property: Type
      Method: BuildNodes --[Uses]--> Property: ClassSyntax
      Method: BuildNodes --[Uses]--> Property: Symbol
      Method: BuildNodes --[Uses]--> Property: IsAbstract
Class: PropertyNodeBuilder (Abstract=False)
  Class: PropertyNodeBuilder --[Implements]--> Interface: INodeBuilder
  Class: PropertyNodeBuilder --[HasProperty]--> Property: NodeType
    Property: NodeType
  Class: PropertyNodeBuilder --[HasMethod]--> Method: BuildNodes
    Method: BuildNodes (Returns IEnumerable, Abstract=False)
      Method: BuildNodes --[Uses]--> Class: GraphContext
      Method: BuildNodes --[Creates]--> Class: PropertyNode
        Class: PropertyNode (Abstract=False)
          Class: PropertyNode --[Implements]--> Interface: INode
          Class: PropertyNode --[HasProperty]--> Property: SyncRoot
            Property: SyncRoot
          Class: PropertyNode --[HasProperty]--> Property: PropertySyntax
            Property: PropertySyntax
          Class: PropertyNode --[HasProperty]--> Property: NodeType
            Property: NodeType
          Class: PropertyNode --[HasProperty]--> Property: Symbol
            Property: Symbol
          Class: PropertyNode --[HasProperty]--> Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
            Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
          Class: PropertyNode --[HasField]--> Field: IsVirtual
            Field: PropertyNode.IsVirtual (public Boolean)
          Class: PropertyNode --[HasProperty]--> Property: ReferencedSymbols
            Property: ReferencedSymbols
          Class: PropertyNode --[HasProperty]--> Property: Edges
            Property: Edges
          Class: PropertyNode --[HasPropertyElement]--> Class: EdgeNode
      Method: BuildNodes --[Uses]--> Property: PropertySyntax
      Method: BuildNodes --[Uses]--> Property: Symbol
      Method: BuildNodes --[ReferencesField]--> Field: IsVirtual
      Method: BuildNodes --[Uses]--> Property: ReferencedSymbols
Class: PatternRule (Abstract=False)
  Class: PatternRule --[HasProperty]--> Property: Name
    Property: Name
  Class: PatternRule --[HasField]--> Field: _checks
    Field: PatternRule._checks (private readonly List)
  Class: PatternRule --[HasField]--> Field: _postProcessor
    Field: PatternRule._postProcessor (private Func)
  Class: PatternRule --[HasConstructor]--> Constructor: PatternRule..ctor
    Constructor: PatternRule..ctor
      Constructor: PatternRule..ctor --[HasConstructor]--> Constructor: PatternRule..ctor
  Class: PatternRule --[HasMethod]--> Method: AddCheck
    Method: AddCheck (Returns PatternRule, Abstract=False)
      Method: AddCheck --[Returns]--> Class: PatternRule
      Method: AddCheck --[ReferencesField]--> Field: _checks
  Class: PatternRule --[HasMethod]--> Method: WithPostProcessor
    Method: WithPostProcessor (Returns PatternRule, Abstract=False)
      Method: WithPostProcessor --[Returns]--> Class: PatternRule
      Method: WithPostProcessor --[ReferencesField]--> Field: _postProcessor
  Class: PatternRule --[HasMethod]--> Method: Evaluate
    Method: Evaluate (Returns PatternResult, Abstract=False)
      Method: Evaluate --[Returns]--> Class: PatternResult
        Class: PatternResult (Abstract=False)
          Class: PatternResult --[HasProperty]--> Property: PatternName
            Property: PatternName
          Class: PatternResult --[HasProperty]--> Property: Score
            Property: Score
          Class: PatternResult --[HasProperty]--> Property: Classification
            Property: Classification
          Class: PatternResult --[HasProperty]--> Property: Checks
            Property: Checks
          Class: PatternResult --[HasProperty]--> Property: Roles
            Property: Roles
          Class: PatternResult --[HasProperty]--> Property: MatchesPattern
            Property: MatchesPattern
          Class: PatternResult --[HasConstructor]--> Constructor: PatternResult..ctor
            Constructor: PatternResult..ctor
              Constructor: PatternResult..ctor --[HasConstructor]--> Constructor: PatternResult..ctor
          Class: PatternResult --[HasMethod]--> Method: None
            Method: None (Returns PatternResult, Abstract=False)
              Method: None --[Returns]--> Class: PatternResult
              Method: None --[Creates]--> Class: PatternResult
      Method: Evaluate --[Uses]--> Class: GraphBuilder
        Class: GraphBuilder (Abstract=False)
          Class: GraphBuilder --[HasField]--> Field: _compilation
            Field: GraphBuilder._compilation (private readonly Compilation)
          Class: GraphBuilder --[HasField]--> Field: _semanticModels
            Field: GraphBuilder._semanticModels (private readonly Dictionary)
          Class: GraphBuilder --[HasField]--> Field: _callResolver
            Field: GraphBuilder._callResolver (private CallResolver)
              Field: _callResolver --[Uses]--> Class: CallResolver
                Class: CallResolver (Abstract=False)
                  Class: CallResolver --[HasField]--> Field: _interfaceToImplementations
                    Field: CallResolver._interfaceToImplementations (private readonly Dictionary)
                  Class: CallResolver --[HasField]--> Field: _lookupCache
                    Field: CallResolver._lookupCache (private readonly ConcurrentDictionary)
                  Class: CallResolver --[HasConstructor]--> Constructor: CallResolver..ctor
                    Constructor: CallResolver..ctor
                      Constructor: CallResolver..ctor --[HasConstructor]--> Constructor: CallResolver..ctor
                  Class: CallResolver --[HasMethod]--> Method: BuildInterfaceImplementationMap
                    Method: BuildInterfaceImplementationMap (Returns Void, Abstract=False)
                      Method: BuildInterfaceImplementationMap --[Uses]--> Property: Symbol
                        Property: Symbol
                      Method: BuildInterfaceImplementationMap --[Uses]--> Property: Symbol
                      Method: BuildInterfaceImplementationMap --[ReferencesField]--> Field: _interfaceToImplementations
                  Class: CallResolver --[HasMethod]--> Method: GetImplementations
                    Method: GetImplementations (Returns IEnumerable, Abstract=False)
                      Method: GetImplementations --[ReferencesField]--> Field: _lookupCache
                      Method: GetImplementations --[ReferencesField]--> Field: _interfaceToImplementations
          Class: GraphBuilder --[HasField]--> Field: _nodeBuilders
            Field: GraphBuilder._nodeBuilders (private readonly List)
          Class: GraphBuilder --[HasField]--> Field: _edgeBuilders
            Field: GraphBuilder._edgeBuilders (private readonly List)
          Class: GraphBuilder --[HasProperty]--> Property: Registry
            Property: Registry
          Class: GraphBuilder --[HasConstructor]--> Constructor: GraphBuilder..ctor
            Constructor: GraphBuilder..ctor
              Constructor: GraphBuilder..ctor --[HasConstructor]--> Constructor: GraphBuilder..ctor
              Constructor: GraphBuilder..ctor --[Creates]--> Class: ClassNodeBuilder
              Constructor: GraphBuilder..ctor --[Creates]--> Class: InterfaceNodeBuilder
                Class: InterfaceNodeBuilder (Abstract=False)
                  Class: InterfaceNodeBuilder --[Implements]--> Interface: INodeBuilder
                  Class: InterfaceNodeBuilder --[HasProperty]--> Property: NodeType
                    Property: NodeType
                  Class: InterfaceNodeBuilder --[HasMethod]--> Method: BuildNodes
                    Method: BuildNodes (Returns IEnumerable, Abstract=False)
                      Method: BuildNodes --[Uses]--> Class: GraphContext
                      Method: BuildNodes --[Calls]--> Method: GetRoot
                      Method: BuildNodes --[Creates]--> Class: InterfaceNode
                        Class: InterfaceNode (Abstract=False)
                          Class: InterfaceNode --[Implements]--> Interface: IAnalyzerNode
                          Class: InterfaceNode --[HasProperty]--> Property: SyncRoot
                            Property: SyncRoot
                          Class: InterfaceNode --[HasProperty]--> Property: InterfaceSyntax
                            Property: InterfaceSyntax
                          Class: InterfaceNode --[HasProperty]--> Property: NodeType
                            Property: NodeType
                          Class: InterfaceNode --[HasProperty]--> Property: Symbol
                            Property: Symbol
                          Class: InterfaceNode --[HasProperty]--> Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
                            Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
                          Class: InterfaceNode --[HasProperty]--> Property: IsAbstract
                            Property: IsAbstract
                          Class: InterfaceNode --[HasProperty]--> Property: Edges
                            Property: Edges
                          Class: InterfaceNode --[HasPropertyElement]--> Class: EdgeNode
                      Method: BuildNodes --[Uses]--> Property: InterfaceSyntax
                      Method: BuildNodes --[Uses]--> Property: Symbol
              Constructor: GraphBuilder..ctor --[Creates]--> Class: ConstructorNodeBuilder
                Class: ConstructorNodeBuilder (Abstract=False)
                  Class: ConstructorNodeBuilder --[Implements]--> Interface: INodeBuilder
                  Class: ConstructorNodeBuilder --[HasProperty]--> Property: NodeType
                    Property: NodeType
                  Class: ConstructorNodeBuilder --[HasMethod]--> Method: BuildNodes
                    Method: BuildNodes (Returns IEnumerable, Abstract=False)
                      Method: BuildNodes --[Uses]--> Class: GraphContext
                      Method: BuildNodes --[Calls]--> Method: GetRoot
                      Method: BuildNodes --[Creates]--> Class: ConstructorNode
                        Class: ConstructorNode (Abstract=False)
                          Class: ConstructorNode --[Implements]--> Interface: INode
                          Class: ConstructorNode --[HasProperty]--> Property: SyncRoot
                            Property: SyncRoot
                          Class: ConstructorNode --[HasProperty]--> Property: ConstructorSyntax
                            Property: ConstructorSyntax
                          Class: ConstructorNode --[HasProperty]--> Property: NodeType
                            Property: NodeType
                          Class: ConstructorNode --[HasProperty]--> Property: Symbol
                            Property: Symbol
                          Class: ConstructorNode --[HasProperty]--> Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
                            Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
                          Class: ConstructorNode --[HasProperty]--> Property: Edges
                            Property: Edges
                          Class: ConstructorNode --[HasPropertyElement]--> Class: EdgeNode
                      Method: BuildNodes --[Uses]--> Property: ConstructorSyntax
                      Method: BuildNodes --[Uses]--> Property: Symbol
              Constructor: GraphBuilder..ctor --[Creates]--> Class: EventNodeBuilder
                Class: EventNodeBuilder (Abstract=False)
                  Class: EventNodeBuilder --[Implements]--> Interface: INodeBuilder
                  Class: EventNodeBuilder --[HasProperty]--> Property: NodeType
                    Property: NodeType
                  Class: EventNodeBuilder --[HasMethod]--> Method: BuildNodes
                    Method: BuildNodes (Returns IEnumerable, Abstract=False)
                      Method: BuildNodes --[Uses]--> Class: GraphContext
                      Method: BuildNodes --[Calls]--> Method: GetRoot
                      Method: BuildNodes --[Creates]--> Class: EventNode
                        Class: EventNode (Abstract=False)
                          Class: EventNode --[Implements]--> Interface: INode
                          Class: EventNode --[HasProperty]--> Property: SyncRoot
                            Property: SyncRoot
                          Class: EventNode --[HasProperty]--> Property: EventSyntax
                            Property: EventSyntax
                          Class: EventNode --[HasProperty]--> Property: NodeType
                            Property: NodeType
                          Class: EventNode --[HasProperty]--> Property: Symbol
                            Property: Symbol
                          Class: EventNode --[HasProperty]--> Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
                            Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
                          Class: EventNode --[HasProperty]--> Property: Edges
                            Property: Edges
                          Class: EventNode --[HasPropertyElement]--> Class: EdgeNode
                      Method: BuildNodes --[Uses]--> Property: EventSyntax
                      Method: BuildNodes --[Uses]--> Property: Symbol
              Constructor: GraphBuilder..ctor --[Creates]--> Class: MethodNodeBuilder
                Class: MethodNodeBuilder (Abstract=False)
                  Class: MethodNodeBuilder --[Implements]--> Interface: INodeBuilder
                  Class: MethodNodeBuilder --[HasProperty]--> Property: NodeType
                    Property: NodeType
                  Class: MethodNodeBuilder --[HasMethod]--> Method: BuildNodes
                    Method: BuildNodes (Returns IEnumerable, Abstract=False)
                      Method: BuildNodes --[Uses]--> Class: GraphContext
                      Method: BuildNodes --[Calls]--> Method: GetRoot
                      Method: BuildNodes --[Creates]--> Class: MethodNode
                        Class: MethodNode (Abstract=False)
                          Class: MethodNode --[Implements]--> Interface: INode
                          Class: MethodNode --[HasProperty]--> Property: SyncRoot
                            Property: SyncRoot
                          Class: MethodNode --[HasProperty]--> Property: MethodSyntax
                            Property: MethodSyntax
                          Class: MethodNode --[HasProperty]--> Property: NodeType
                            Property: NodeType
                          Class: MethodNode --[HasProperty]--> Property: Symbol
                          Class: MethodNode --[HasProperty]--> Property: ReturnType
                            Property: ReturnType
                          Class: MethodNode --[HasProperty]--> Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
                            Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
                          Class: MethodNode --[HasProperty]--> Property: IsAbstract
                            Property: IsAbstract
                          Class: MethodNode --[HasProperty]--> Property: IsVirtual
                            Property: IsVirtual
                          Class: MethodNode --[HasProperty]--> Property: Edges
                            Property: Edges
                          Class: MethodNode --[HasPropertyElement]--> Class: EdgeNode
                      Method: BuildNodes --[Uses]--> Property: MethodSyntax
                      Method: BuildNodes --[Uses]--> Property: Symbol
                      Method: BuildNodes --[Uses]--> Property: IsAbstract
                      Method: BuildNodes --[Uses]--> Property: IsVirtual
              Constructor: GraphBuilder..ctor --[Creates]--> Class: PropertyNodeBuilder
              Constructor: GraphBuilder..ctor --[Creates]--> Class: FieldNodeBuilder
                Class: FieldNodeBuilder (Abstract=False)
                  Class: FieldNodeBuilder --[Implements]--> Interface: INodeBuilder
                  Class: FieldNodeBuilder --[HasProperty]--> Property: NodeType
                    Property: NodeType
                  Class: FieldNodeBuilder --[HasMethod]--> Method: BuildNodes
                    Method: BuildNodes (Returns IEnumerable, Abstract=False)
                      Method: BuildNodes --[Uses]--> Class: GraphContext
                      Method: BuildNodes --[Calls]--> Method: GetRoot
                      Method: BuildNodes --[Creates]--> Class: FieldNode
                        Class: FieldNode (Abstract=False)
                          Class: FieldNode --[Implements]--> Interface: INode
                          Class: FieldNode --[HasProperty]--> Property: SyncRoot
                            Property: SyncRoot
                          Class: FieldNode --[HasProperty]--> Property: DeclarationSyntax
                            Property: DeclarationSyntax
                          Class: FieldNode --[HasProperty]--> Property: VariableSyntax
                            Property: VariableSyntax
                          Class: FieldNode --[HasProperty]--> Property: NodeType
                            Property: NodeType
                          Class: FieldNode --[HasProperty]--> Property: Symbol
                            Property: Symbol
                          Class: FieldNode --[HasProperty]--> Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
                            Property: CodeAnalysisService.GraphService.Nodes.INode.Symbol
                          Class: FieldNode --[HasProperty]--> Property: Edges
                            Property: Edges
                          Class: FieldNode --[HasPropertyElement]--> Class: EdgeNode
                      Method: BuildNodes --[Uses]--> Property: DeclarationSyntax
                      Method: BuildNodes --[Uses]--> Property: VariableSyntax
                      Method: BuildNodes --[Uses]--> Property: Symbol
              Constructor: GraphBuilder..ctor --[Creates]--> Class: ClassEdgeBuilder
                Class: ClassEdgeBuilder (Abstract=False)
                  Class: ClassEdgeBuilder --[Implements]--> Interface: IEdgeBuilder
                    Interface: IEdgeBuilder
                  Class: ClassEdgeBuilder --[HasProperty]--> Property: NodeType
                    Property: NodeType
                  Class: ClassEdgeBuilder --[HasMethod]--> Method: BuildEdges
                    Method: BuildEdges (Returns IEnumerable, Abstract=False)
                      Method: BuildEdges --[Uses]--> Class: NodeRegistry
                      Method: BuildEdges --[Uses]--> Property: ClassSyntax
                      Method: BuildEdges --[Uses]--> Property: Symbol
                      Method: BuildEdges --[Creates]--> Class: EdgeNode
                      Method: BuildEdges --[Uses]--> Property: Target
                      Method: BuildEdges --[Uses]--> Property: Type
                      Method: BuildEdges --[Calls]--> Method: GetElementType
                        Method: GetElementType (Returns ITypeSymbol, Abstract=False)
              Constructor: GraphBuilder..ctor --[Creates]--> Class: InterfaceEdgeBuilder
                Class: InterfaceEdgeBuilder (Abstract=False)
                  Class: InterfaceEdgeBuilder --[Implements]--> Interface: IEdgeBuilder
                  Class: InterfaceEdgeBuilder --[HasProperty]--> Property: NodeType
                    Property: NodeType
                  Class: InterfaceEdgeBuilder --[HasMethod]--> Method: BuildEdges
                    Method: BuildEdges (Returns IEnumerable, Abstract=False)
                      Method: BuildEdges --[Uses]--> Class: NodeRegistry
                      Method: BuildEdges --[Uses]--> Property: Symbol
                      Method: BuildEdges --[Creates]--> Class: EdgeNode
                      Method: BuildEdges --[Uses]--> Property: Target
                      Method: BuildEdges --[Uses]--> Property: Type
              Constructor: GraphBuilder..ctor --[Creates]--> Class: ConstructorEdgeBuilder
                Class: ConstructorEdgeBuilder (Abstract=False)
                  Class: ConstructorEdgeBuilder --[Implements]--> Interface: IEdgeBuilder
                  Class: ConstructorEdgeBuilder --[HasProperty]--> Property: NodeType
                    Property: NodeType
                  Class: ConstructorEdgeBuilder --[HasMethod]--> Method: BuildEdges
                    Method: BuildEdges (Returns IEnumerable, Abstract=False)
                      Method: BuildEdges --[Uses]--> Class: NodeRegistry
                      Method: BuildEdges --[Uses]--> Property: Symbol
                      Method: BuildEdges --[Creates]--> Class: EdgeNode
                      Method: BuildEdges --[Uses]--> Property: Target
                      Method: BuildEdges --[Uses]--> Property: Type
                      Method: BuildEdges --[Uses]--> Property: ConstructorSyntax
              Constructor: GraphBuilder..ctor --[Creates]--> Class: EventEdgeBuilder
                Class: EventEdgeBuilder (Abstract=False)
                  Class: EventEdgeBuilder --[Implements]--> Interface: IEdgeBuilder
                  Class: EventEdgeBuilder --[HasProperty]--> Property: NodeType
                    Property: NodeType
                  Class: EventEdgeBuilder --[HasMethod]--> Method: BuildEdges
                    Method: BuildEdges (Returns IEnumerable, Abstract=False)
                      Method: BuildEdges --[Uses]--> Class: NodeRegistry
                      Method: BuildEdges --[Uses]--> Property: Symbol
                      Method: BuildEdges --[Creates]--> Class: EdgeNode
                      Method: BuildEdges --[Uses]--> Property: Target
                      Method: BuildEdges --[Uses]--> Property: Type
              Constructor: GraphBuilder..ctor --[Creates]--> Class: MethodEdgeBuilder
                Class: MethodEdgeBuilder (Abstract=False)
                  Class: MethodEdgeBuilder --[Implements]--> Interface: IEdgeBuilder
                  Class: MethodEdgeBuilder --[HasField]--> Field: _callResolver
                    Field: MethodEdgeBuilder._callResolver (private CallResolver)
                      Field: _callResolver --[Uses]--> Class: CallResolver
                  Class: MethodEdgeBuilder --[HasProperty]--> Property: NodeType
                    Property: NodeType
                  Class: MethodEdgeBuilder --[HasMethod]--> Method: BuildEdges
                    Method: BuildEdges (Returns IEnumerable, Abstract=False)
                      Method: BuildEdges --[Uses]--> Class: NodeRegistry
                      Method: BuildEdges --[ReferencesField]--> Field: _callResolver
                      Method: BuildEdges --[Uses]--> Property: MethodSyntax
                      Method: BuildEdges --[Uses]--> Property: Symbol
                      Method: BuildEdges --[Creates]--> Class: EdgeNode
                      Method: BuildEdges --[Uses]--> Property: Target
                      Method: BuildEdges --[Uses]--> Property: Type
                      Method: BuildEdges --[Calls]--> Method: GetElementType
                      Method: BuildEdges --[Calls]--> Method: HandleInvocation
                        Method: HandleInvocation (Returns Void, Abstract=False)
                          Method: HandleInvocation --[Uses]--> Class: NodeRegistry
                          Method: HandleInvocation --[Creates]--> Class: EdgeNode
                          Method: HandleInvocation --[Uses]--> Property: Target
                          Method: HandleInvocation --[Uses]--> Property: Type
                          Method: HandleInvocation --[ReferencesField]--> Field: _callResolver
                          Method: HandleInvocation --[Calls]--> Method: GetImplementations
                      Method: BuildEdges --[Calls]--> Method: GetImplementations
                  Class: MethodEdgeBuilder --[HasMethod]--> Method: HandleInvocation
                  Class: MethodEdgeBuilder --[HasMethod]--> Method: WithCallResolver
                    Method: WithCallResolver (Returns Void, Abstract=False)
                      Method: WithCallResolver --[Uses]--> Class: CallResolver
                      Method: WithCallResolver --[ReferencesField]--> Field: _callResolver
              Constructor: GraphBuilder..ctor --[Creates]--> Class: PropertyEdgeBuilder
                Class: PropertyEdgeBuilder (Abstract=False)
                  Class: PropertyEdgeBuilder --[Implements]--> Interface: IEdgeBuilder
                  Class: PropertyEdgeBuilder --[HasProperty]--> Property: NodeType
                    Property: NodeType
                  Class: PropertyEdgeBuilder --[HasMethod]--> Method: BuildEdges
                    Method: BuildEdges (Returns IEnumerable, Abstract=False)
                      Method: BuildEdges --[Uses]--> Class: NodeRegistry
                      Method: BuildEdges --[Uses]--> Property: ReferencedSymbols
                      Method: BuildEdges --[Creates]--> Class: EdgeNode
                      Method: BuildEdges --[Uses]--> Property: Target
                      Method: BuildEdges --[Uses]--> Property: Type
                      Method: BuildEdges --[Calls]--> Method: GetElementType
              Constructor: GraphBuilder..ctor --[Creates]--> Class: FieldEdgeBuilder
                Class: FieldEdgeBuilder (Abstract=False)
                  Class: FieldEdgeBuilder --[Implements]--> Interface: IEdgeBuilder
                  Class: FieldEdgeBuilder --[HasProperty]--> Property: NodeType
                    Property: NodeType
                  Class: FieldEdgeBuilder --[HasMethod]--> Method: BuildEdges
                    Method: BuildEdges (Returns IEnumerable, Abstract=False)
                      Method: BuildEdges --[Uses]--> Class: NodeRegistry
                      Method: BuildEdges --[Uses]--> Property: Symbol
                      Method: BuildEdges --[Creates]--> Class: EdgeNode
                      Method: BuildEdges --[Uses]--> Property: Target
                      Method: BuildEdges --[Uses]--> Property: Type
                      Method: BuildEdges --[Calls]--> Method: GetElementType
          Class: GraphBuilder --[HasMethod]--> Method: BuildGraph
            Method: BuildGraph (Returns Void, Abstract=False)
              Method: BuildGraph --[Calls]--> Method: BuildNodes
                Method: BuildNodes (Returns Void, Abstract=False)
                  Method: BuildNodes --[Creates]--> Class: GraphContext
                  Method: BuildNodes --[ReferencesField]--> Field: _semanticModels
                  Method: BuildNodes --[Uses]--> Property: Registry
                  Method: BuildNodes --[ReferencesField]--> Field: _nodeBuilders
                  Method: BuildNodes --[Calls]--> Method: BuildNodes
                    Method: BuildNodes (Returns IEnumerable, Abstract=True)
                      Method: BuildNodes --[Uses]--> Class: GraphContext
                      Method: BuildNodes --[ImplementedBy]--> Method: BuildNodes
                      Method: BuildNodes --[ImplementedBy]--> Method: BuildNodes
                      Method: BuildNodes --[ImplementedBy]--> Method: BuildNodes
                      Method: BuildNodes --[ImplementedBy]--> Method: BuildNodes
                      Method: BuildNodes --[ImplementedBy]--> Method: BuildNodes
                      Method: BuildNodes --[ImplementedBy]--> Method: BuildNodes
                      Method: BuildNodes --[ImplementedBy]--> Method: BuildNodes
                  Method: BuildNodes --[Calls]--> Method: AddNodesSafe
                    Method: AddNodesSafe (Returns Void, Abstract=False)
                      Method: AddNodesSafe --[Calls]--> Method: AddNode
                      Method: AddNodesSafe --[Uses]--> Property: Registry
              Method: BuildGraph --[Calls]--> Method: BuildEdges
                Method: BuildEdges (Returns Void, Abstract=False)
                  Method: BuildEdges --[ReferencesField]--> Field: _callResolver
                  Method: BuildEdges --[Creates]--> Class: CallResolver
                  Method: BuildEdges --[Uses]--> Property: Registry
                  Method: BuildEdges --[ReferencesField]--> Field: _edgeBuilders
                  Method: BuildEdges --[Calls]--> Method: WithCallResolver
                    Method: WithCallResolver (Returns Void, Abstract=False)
                      Method: WithCallResolver --[Uses]--> Class: CallResolver
                      Method: WithCallResolver --[ImplementedBy]--> Method: WithCallResolver
                  Method: BuildEdges --[Uses]--> Property: NodeType
                    Property: NodeType
                  Method: BuildEdges --[Uses]--> Property: NodeType
                    Property: NodeType
                  Method: BuildEdges --[Calls]--> Method: BuildEdges
                    Method: BuildEdges (Returns IEnumerable, Abstract=True)
                      Method: BuildEdges --[Uses]--> Class: NodeRegistry
                      Method: BuildEdges --[ImplementedBy]--> Method: BuildEdges
                      Method: BuildEdges --[ImplementedBy]--> Method: BuildEdges
                      Method: BuildEdges --[ImplementedBy]--> Method: BuildEdges
                      Method: BuildEdges --[ImplementedBy]--> Method: BuildEdges
                      Method: BuildEdges --[ImplementedBy]--> Method: BuildEdges
                      Method: BuildEdges --[ImplementedBy]--> Method: BuildEdges
                      Method: BuildEdges --[ImplementedBy]--> Method: BuildEdges
                  Method: BuildEdges --[ReferencesField]--> Field: _compilation
                  Method: BuildEdges --[ReferencesField]--> Field: _semanticModels
                  Method: BuildEdges --[Uses]--> Property: SyncRoot
                    Property: SyncRoot
                  Method: BuildEdges --[Uses]--> Property: Edges
                    Property: Edges
                  Method: BuildEdges --[ReferencesField]--> Field: Edge
                    Field: Comparers.Edge (public static readonly IEqualityComparer)
          Class: GraphBuilder --[HasMethod]--> Method: BuildNodes
          Class: GraphBuilder --[HasMethod]--> Method: BuildEdges
          Class: GraphBuilder --[HasMethod]--> Method: AddNodesSafe
      Method: Evaluate --[ReferencesField]--> Field: _checks
      Method: Evaluate --[Uses]--> Property: Passed
        Property: Passed
      Method: Evaluate --[Uses]--> Property: Roles
        Property: Roles
      Method: Evaluate --[Calls]--> Method: None
      Method: Evaluate --[Uses]--> Property: Name
      Method: Evaluate --[ReferencesField]--> Field: PatternRole
        Field: Comparers.PatternRole (public static readonly IEqualityComparer)
      Method: Evaluate --[Creates]--> Class: PatternResult
      Method: Evaluate --[ReferencesField]--> Field: _postProcessor
Class: Dog1 (Abstract=False)
  Class: Dog1 --[Inherits]--> Class: Animal1
    Class: Animal1 (Abstract=True)
      Class: Animal1 --[HasMethod]--> Method: Speak
        Method: Speak (Returns Void, Abstract=True)
  Class: Dog1 --[HasMethod]--> Method: Speak
    Method: Speak (Returns Void, Abstract=False)
      Method: Speak --[Overrides]--> Method: Speak
Class: AppDisplay (Abstract=False)
  Class: AppDisplay --[Implements]--> Interface: IObserver3
    Interface: IObserver3
  Class: AppDisplay --[HasMethod]--> Method: Update
    Method: Update (Returns Void, Abstract=False)
Class: NewsPublisher (Abstract=False)
  Class: NewsPublisher --[HasProperty]--> Property: Observers
    Property: Observers
  Class: NewsPublisher --[HasMethod]--> Method: Subscribe
    Method: Subscribe (Returns Void, Abstract=False)
      Method: Subscribe --[Uses]--> Property: Observers
  Class: NewsPublisher --[HasMethod]--> Method: NotifyAll
    Method: NotifyAll (Returns Void, Abstract=False)
      Method: NotifyAll --[Uses]--> Property: Observers
      Method: NotifyAll --[Calls]--> Method: Update
        Method: Update (Returns Void, Abstract=True)
          Method: Update --[ImplementedBy]--> Method: Update
Class: SingletonRuleFactory (Abstract=False)
  Class: SingletonRuleFactory --[HasMethod]--> Method: Create
    Method: Create (Returns PatternRule, Abstract=False)
      Method: Create --[Returns]--> Class: PatternRule
      Method: Create --[Calls]--> Method: AddCheck
      Method: Create --[Creates]--> Class: PatternRule
      Method: Create --[ReferencesField]--> Field: Empty
        Field: PatternRuleResult.Empty (public static readonly PatternRuleResult)
          Field: Empty --[Uses]--> Class: PatternRuleResult
            Class: PatternRuleResult (Abstract=False)
              Class: PatternRuleResult --[HasField]--> Field: Empty
              Class: PatternRuleResult --[HasProperty]--> Property: Passed
              Class: PatternRuleResult --[HasProperty]--> Property: Roles
              Class: PatternRuleResult --[HasConstructor]--> Constructor: PatternRuleResult..ctor
                Constructor: PatternRuleResult..ctor
                  Constructor: PatternRuleResult..ctor --[HasConstructor]--> Constructor: PatternRuleResult..ctor
              Class: PatternRuleResult --[HasMethod]--> Method: Success
                Method: Success (Returns PatternRuleResult, Abstract=False)
                  Method: Success --[Returns]--> Class: PatternRuleResult
                  Method: Success --[Creates]--> Class: PatternRuleResult
      Method: Create --[Calls]--> Method: Success
Class: ProductFactory (Abstract=False)
  Class: ProductFactory --[HasMethod]--> Method: CreateProductA
    Method: CreateProductA (Returns IProduct, Abstract=False)
      Method: CreateProductA --[Creates]--> Class: ConcreteProductA
        Class: ConcreteProductA (Abstract=False)
          Class: ConcreteProductA --[Implements]--> Interface: IProduct
            Interface: IProduct
          Class: ConcreteProductA --[HasMethod]--> Method: GetName
            Method: GetName (Returns String, Abstract=False)
  Class: ProductFactory --[HasMethod]--> Method: CreateProductB
    Method: CreateProductB (Returns IProduct, Abstract=False)
      Method: CreateProductB --[Creates]--> Class: ConcreteProductB
        Class: ConcreteProductB (Abstract=False)
          Class: ConcreteProductB --[Implements]--> Interface: IProduct
          Class: ConcreteProductB --[HasMethod]--> Method: GetName
            Method: GetName (Returns String, Abstract=False)
Class: Car1 (Abstract=False)
Class: SedanFactory1 (Abstract=False)
  Class: SedanFactory1 --[Inherits]--> Class: CarFactory1
    Class: CarFactory1 (Abstract=True)
      Class: CarFactory1 --[HasMethod]--> Method: CreateCar
        Method: CreateCar (Returns Car1, Abstract=True)
          Method: CreateCar --[Returns]--> Class: Car1
  Class: SedanFactory1 --[HasMethod]--> Method: CreateCar
    Method: CreateCar (Returns Car1, Abstract=False)
      Method: CreateCar --[Returns]--> Class: Car1
      Method: CreateCar --[Creates]--> Class: Car1
      Method: CreateCar --[Overrides]--> Method: CreateCar
Class: WeatherStation (Abstract=False)
  Class: WeatherStation --[HasField]--> Field: _observers
    Field: WeatherStation._observers (private readonly List)
  Class: WeatherStation --[HasMethod]--> Method: AddObserver
    Method: AddObserver (Returns Void, Abstract=False)
      Method: AddObserver --[ReferencesField]--> Field: _observers
  Class: WeatherStation --[HasMethod]--> Method: RemoveObserver
    Method: RemoveObserver (Returns Void, Abstract=False)
      Method: RemoveObserver --[ReferencesField]--> Field: _observers
  Class: WeatherStation --[HasMethod]--> Method: NotifyObservers
    Method: NotifyObservers (Returns Void, Abstract=False)
      Method: NotifyObservers --[ReferencesField]--> Field: _observers
      Method: NotifyObservers --[Calls]--> Method: Update
        Method: Update (Returns Void, Abstract=True)
          Method: Update --[ImplementedBy]--> Method: Update
            Method: Update (Returns Void, Abstract=False)
          Method: Update --[ImplementedBy]--> Method: Update
            Method: Update (Returns Void, Abstract=False)
Class: GeneralEqualityComparer (Abstract=False)
  Class: GeneralEqualityComparer --[HasField]--> Field: _equals
    Field: GeneralEqualityComparer._equals (private readonly Func)
  Class: GeneralEqualityComparer --[HasField]--> Field: _getHashCode
    Field: GeneralEqualityComparer._getHashCode (private readonly Func)
  Class: GeneralEqualityComparer --[HasConstructor]--> Constructor: GeneralEqualityComparer..ctor
    Constructor: GeneralEqualityComparer..ctor
      Constructor: GeneralEqualityComparer..ctor --[HasConstructor]--> Constructor: GeneralEqualityComparer..ctor
  Class: GeneralEqualityComparer --[HasMethod]--> Method: Equals
    Method: Equals (Returns Boolean, Abstract=False)
      Method: Equals --[ReferencesField]--> Field: _equals
  Class: GeneralEqualityComparer --[HasMethod]--> Method: GetHashCode
    Method: GetHashCode (Returns Int32, Abstract=False)
      Method: GetHashCode --[ReferencesField]--> Field: _getHashCode
Class: Cat (Abstract=False)
  Class: Cat --[Implements]--> Interface: Animal
    Interface: Animal
Class: Dog (Abstract=False)
  Class: Dog --[Implements]--> Interface: Animal
Class: AnimalFactory (Abstract=False)
  Class: AnimalFactory --[HasMethod]--> Method: CreateDog
    Method: CreateDog (Returns Animal, Abstract=False)
      Method: CreateDog --[Creates]--> Class: Dog
  Class: AnimalFactory --[HasMethod]--> Method: CreateCat
    Method: CreateCat (Returns Animal, Abstract=False)
      Method: CreateCat --[Creates]--> Class: Cat
Class: FancyButton1 (Abstract=False)
  Class: FancyButton1 --[Inherits]--> Class: Button1
    Class: Button1 (Abstract=True)
Class: FancyGUIFactory1 (Abstract=False)
  Class: FancyGUIFactory1 --[Inherits]--> Class: GUIFactory1
    Class: GUIFactory1 (Abstract=True)
      Class: GUIFactory1 --[HasMethod]--> Method: CreateButton
        Method: CreateButton (Returns Button1, Abstract=True)
          Method: CreateButton --[Returns]--> Class: Button1
  Class: FancyGUIFactory1 --[HasMethod]--> Method: CreateButton
    Method: CreateButton (Returns Button1, Abstract=False)
      Method: CreateButton --[Returns]--> Class: Button1
      Method: CreateButton --[Creates]--> Class: FancyButton1
      Method: CreateButton --[Overrides]--> Method: CreateButton
Class: Context (Abstract=False)
  Class: Context --[HasField]--> Field: _strategy
    Field: Context._strategy (private IStrategy)
  Class: Context --[HasConstructor]--> Constructor: Context..ctor
    Constructor: Context..ctor
      Constructor: Context..ctor --[HasConstructor]--> Constructor: Context..ctor
  Class: Context --[HasMethod]--> Method: Run
    Method: Run (Returns Void, Abstract=False)
      Method: Run --[Calls]--> Method: Execute
        Method: Execute (Returns Void, Abstract=True)
          Method: Execute --[ImplementedBy]--> Method: Execute
            Method: Execute (Returns Void, Abstract=False)
          Method: Execute --[ImplementedBy]--> Method: Execute
            Method: Execute (Returns Void, Abstract=False)
      Method: Run --[ReferencesField]--> Field: _strategy
Class: StrategyB (Abstract=False)
  Class: StrategyB --[Implements]--> Interface: IStrategy
    Interface: IStrategy
  Class: StrategyB --[HasMethod]--> Method: Execute
Class: StrategyA (Abstract=False)
  Class: StrategyA --[Implements]--> Interface: IStrategy
  Class: StrategyA --[HasMethod]--> Method: Execute
Class: RepoPrinter (Abstract=False)
  Class: RepoPrinter --[HasField]--> Field: IgnoredFolders
    Field: RepoPrinter.IgnoredFolders (private static readonly HashSet)
  Class: RepoPrinter --[HasField]--> Field: IgnoredFiles
    Field: RepoPrinter.IgnoredFiles (private static readonly HashSet)
  Class: RepoPrinter --[HasMethod]--> Method: PrintRepo
    Method: PrintRepo (Returns Void, Abstract=False)
      Method: PrintRepo --[Calls]--> Method: PrintDirectory
        Method: PrintDirectory (Returns Void, Abstract=False)
          Method: PrintDirectory --[ReferencesField]--> Field: IgnoredFolders
          Method: PrintDirectory --[ReferencesField]--> Field: IgnoredFiles
          Method: PrintDirectory --[Calls]--> Method: PrintDirectory
      Method: PrintRepo --[ReferencesField]--> Field: IgnoredFiles
  Class: RepoPrinter --[HasMethod]--> Method: PrintDirectory
Class: PatternAnalyserManager (Abstract=False)
  Class: PatternAnalyserManager --[HasField]--> Field: _graph
    Field: PatternAnalyserManager._graph (private readonly GraphBuilder)
      Field: _graph --[Uses]--> Class: GraphBuilder
  Class: PatternAnalyserManager --[HasField]--> Field: _rules
    Field: PatternAnalyserManager._rules (private readonly List)
      Field: _rules --[HasFieldElement]--> Class: PatternRule
  Class: PatternAnalyserManager --[HasFieldElement]--> Class: PatternRule
  Class: PatternAnalyserManager --[HasField]--> Field: _printers
    Field: PatternAnalyserManager._printers (private readonly Dictionary)
  Class: PatternAnalyserManager --[HasConstructor]--> Constructor: PatternAnalyserManager..ctor
    Constructor: PatternAnalyserManager..ctor
      Constructor: PatternAnalyserManager..ctor --[HasConstructor]--> Constructor: PatternAnalyserManager..ctor
      Constructor: PatternAnalyserManager..ctor --[Creates]--> Class: ObserverPatternPrinter
        Class: ObserverPatternPrinter (Abstract=False)
          Class: ObserverPatternPrinter --[Inherits]--> Class: BasePatternPrinter
            Class: BasePatternPrinter (Abstract=True)
              Class: BasePatternPrinter --[Implements]--> Interface: IPatternPrinter
                Interface: IPatternPrinter
              Class: BasePatternPrinter --[HasProperty]--> Property: PatternName
                Property: PatternName
              Class: BasePatternPrinter --[HasMethod]--> Method: Print
                Method: Print (Returns Void, Abstract=False)
                  Method: Print --[Uses]--> Class: PatternResult
                  Method: Print --[Calls]--> Method: PrintHeader
                    Method: PrintHeader (Returns Void, Abstract=False)
                      Method: PrintHeader --[Uses]--> Class: PatternResult
                      Method: PrintHeader --[Uses]--> Property: PatternName
                      Method: PrintHeader --[Uses]--> Property: Score
                      Method: PrintHeader --[Calls]--> Method: GetConfidenceLabel
                        Method: GetConfidenceLabel (Returns String, Abstract=False)
                  Method: Print --[Calls]--> Method: PrintChecks
                    Method: PrintChecks (Returns Void, Abstract=False)
                      Method: PrintChecks --[Uses]--> Class: PatternResult
                      Method: PrintChecks --[Uses]--> Property: Checks
                  Method: Print --[Calls]--> Method: PrintRoles
                    Method: PrintRoles (Returns Void, Abstract=True)
                      Method: PrintRoles --[Uses]--> Class: PatternResult
                  Method: Print --[Calls]--> Method: PrintFooter
                    Method: PrintFooter (Returns Void, Abstract=False)
              Class: BasePatternPrinter --[HasMethod]--> Method: PrintChecks
              Class: BasePatternPrinter --[HasMethod]--> Method: PrintRoles
              Class: BasePatternPrinter --[HasMethod]--> Method: PrintHeader
              Class: BasePatternPrinter --[HasMethod]--> Method: PrintFooter
              Class: BasePatternPrinter --[HasMethod]--> Method: PrintRoleGroup
                Method: PrintRoleGroup (Returns Void, Abstract=False)
                  Method: PrintRoleGroup --[Uses]--> Property: Symbol
                    Property: Symbol
              Class: BasePatternPrinter --[HasMethod]--> Method: GetConfidenceLabel
          Class: ObserverPatternPrinter --[HasProperty]--> Property: PatternName
            Property: PatternName
              Property: PatternName --[Uses]--> Class: PatternNames
                Class: PatternNames (Abstract=False)
                  Class: PatternNames --[HasField]--> Field: Observer
                    Field: PatternNames.Observer (public const String)
                  Class: PatternNames --[HasField]--> Field: Singleton
                    Field: PatternNames.Singleton (public const String)
                  Class: PatternNames --[HasField]--> Field: FactoryMethod
                    Field: PatternNames.FactoryMethod (public const String)
                  Class: PatternNames --[HasField]--> Field: Strategy
                    Field: PatternNames.Strategy (public const String)
                  Class: PatternNames --[HasField]--> Field: Adapter
                    Field: PatternNames.Adapter (public const String)
                  Class: PatternNames --[HasField]--> Field: State
                    Field: PatternNames.State (public const String)
              Property: PatternName --[ReferencesField]--> Field: Observer
          Class: ObserverPatternPrinter --[HasMethod]--> Method: PrintRoles
            Method: PrintRoles (Returns Void, Abstract=False)
              Method: PrintRoles --[Uses]--> Class: PatternResult
              Method: PrintRoles --[Calls]--> Method: PrintRoleGroup
              Method: PrintRoles --[Uses]--> Property: Roles
              Method: PrintRoles --[Overrides]--> Method: PrintRoles
      Constructor: PatternAnalyserManager..ctor --[Creates]--> Class: SingletonPatternPrinter
        Class: SingletonPatternPrinter (Abstract=False)
          Class: SingletonPatternPrinter --[Inherits]--> Class: BasePatternPrinter
          Class: SingletonPatternPrinter --[HasProperty]--> Property: PatternName
            Property: PatternName
              Property: PatternName --[Uses]--> Class: PatternNames
              Property: PatternName --[ReferencesField]--> Field: Singleton
          Class: SingletonPatternPrinter --[HasMethod]--> Method: PrintRoles
            Method: PrintRoles (Returns Void, Abstract=False)
              Method: PrintRoles --[Uses]--> Class: PatternResult
              Method: PrintRoles --[Calls]--> Method: PrintRoleGroup
              Method: PrintRoles --[Uses]--> Property: Roles
              Method: PrintRoles --[Overrides]--> Method: PrintRoles
      Constructor: PatternAnalyserManager..ctor --[Creates]--> Class: FactoryMethodPatternPrinter
        Class: FactoryMethodPatternPrinter (Abstract=False)
          Class: FactoryMethodPatternPrinter --[Inherits]--> Class: BasePatternPrinter
          Class: FactoryMethodPatternPrinter --[HasProperty]--> Property: PatternName
            Property: PatternName
              Property: PatternName --[Uses]--> Class: PatternNames
              Property: PatternName --[ReferencesField]--> Field: FactoryMethod
          Class: FactoryMethodPatternPrinter --[HasMethod]--> Method: PrintRoles
            Method: PrintRoles (Returns Void, Abstract=False)
              Method: PrintRoles --[Uses]--> Class: PatternResult
              Method: PrintRoles --[Calls]--> Method: PrintRoleGroup
              Method: PrintRoles --[Uses]--> Property: Roles
              Method: PrintRoles --[Overrides]--> Method: PrintRoles
      Constructor: PatternAnalyserManager..ctor --[Creates]--> Class: StrategyPatternPrinter
        Class: StrategyPatternPrinter (Abstract=False)
          Class: StrategyPatternPrinter --[Inherits]--> Class: BasePatternPrinter
          Class: StrategyPatternPrinter --[HasProperty]--> Property: PatternName
            Property: PatternName
              Property: PatternName --[Uses]--> Class: PatternNames
              Property: PatternName --[ReferencesField]--> Field: Strategy
          Class: StrategyPatternPrinter --[HasMethod]--> Method: PrintRoles
            Method: PrintRoles (Returns Void, Abstract=False)
              Method: PrintRoles --[Uses]--> Class: PatternResult
              Method: PrintRoles --[Calls]--> Method: PrintRoleGroup
              Method: PrintRoles --[Uses]--> Property: Roles
              Method: PrintRoles --[Overrides]--> Method: PrintRoles
      Constructor: PatternAnalyserManager..ctor --[Creates]--> Class: AdapterPatternPrinter
        Class: AdapterPatternPrinter (Abstract=False)
          Class: AdapterPatternPrinter --[Inherits]--> Class: BasePatternPrinter
          Class: AdapterPatternPrinter --[HasProperty]--> Property: PatternName
            Property: PatternName
              Property: PatternName --[Uses]--> Class: PatternNames
              Property: PatternName --[ReferencesField]--> Field: Adapter
          Class: AdapterPatternPrinter --[HasMethod]--> Method: PrintRoles
            Method: PrintRoles (Returns Void, Abstract=False)
              Method: PrintRoles --[Uses]--> Class: PatternResult
              Method: PrintRoles --[Calls]--> Method: PrintRoleGroup
              Method: PrintRoles --[Uses]--> Property: Roles
              Method: PrintRoles --[Overrides]--> Method: PrintRoles
      Constructor: PatternAnalyserManager..ctor --[Creates]--> Class: StatePatternPrinter
        Class: StatePatternPrinter (Abstract=False)
          Class: StatePatternPrinter --[Inherits]--> Class: BasePatternPrinter
          Class: StatePatternPrinter --[HasProperty]--> Property: PatternName
            Property: PatternName
              Property: PatternName --[Uses]--> Class: PatternNames
              Property: PatternName --[ReferencesField]--> Field: State
          Class: StatePatternPrinter --[HasMethod]--> Method: PrintRoles
            Method: PrintRoles (Returns Void, Abstract=False)
              Method: PrintRoles --[Uses]--> Class: PatternResult
              Method: PrintRoles --[Calls]--> Method: PrintRoleGroup
              Method: PrintRoles --[Uses]--> Property: Roles
              Method: PrintRoles --[Overrides]--> Method: PrintRoles
  Class: PatternAnalyserManager --[HasMethod]--> Method: AnalyseAll
    Method: AnalyseAll (Returns List, Abstract=False)
      Method: AnalyseAll --[ReferencesField]--> Field: _graph
      Method: AnalyseAll --[Uses]--> Property: Registry
      Method: AnalyseAll --[ReferencesField]--> Field: _rules
      Method: AnalyseAll --[Calls]--> Method: Evaluate
      Method: AnalyseAll --[Uses]--> Property: MatchesPattern
  Class: PatternAnalyserManager --[HasMethod]--> Method: PrintResults
    Method: PrintResults (Returns Void, Abstract=False)
      Method: PrintResults --[Uses]--> Property: MatchesPattern
      Method: PrintResults --[Uses]--> Property: PatternName
      Method: PrintResults --[Uses]--> Property: Roles
      Method: PrintResults --[Uses]--> Property: Symbol
      Method: PrintResults --[ReferencesField]--> Field: _printers
      Method: PrintResults --[Calls]--> Method: Print
        Method: Print (Returns Void, Abstract=True)
          Method: Print --[Uses]--> Class: PatternResult
          Method: Print --[ImplementedBy]--> Method: Print
Class: StrategyOrStateRuleFactory (Abstract=False)
  Class: StrategyOrStateRuleFactory --[HasMethod]--> Method: Create
    Method: Create (Returns PatternRule, Abstract=False)
      Method: Create --[Returns]--> Class: PatternRule
      Method: Create --[Calls]--> Method: WithPostProcessor
      Method: Create --[Calls]--> Method: AddCheck
      Method: Create --[Creates]--> Class: PatternRule
      Method: Create --[ReferencesField]--> Field: Strategy
      Method: Create --[Uses]--> Property: Symbol
      Method: Create --[Uses]--> Property: IsAbstract
        Property: IsAbstract
      Method: Create --[Calls]--> Method: Success
      Method: Create --[ReferencesField]--> Field: Strategy
        Field: Roles.Strategy (public const String)
      Method: Create --[ReferencesField]--> Field: Empty
      Method: Create --[Uses]--> Property: Registry
      Method: Create --[ReferencesField]--> Field: ConcreteStrategy
        Field: Roles.ConcreteStrategy (public const String)
      Method: Create --[Uses]--> Property: Symbol
      Method: Create --[ReferencesField]--> Field: ContextCandidate
        Field: Roles.ContextCandidate (public const String)
      Method: Create --[ReferencesField]--> Field: Context
        Field: Roles.Context (public const String)
      Method: Create --[Uses]--> Property: PatternName
      Method: Create --[Uses]--> Property: Score
      Method: Create --[Uses]--> Property: Roles
      Method: Create --[ReferencesField]--> Field: StateInterface
        Field: Roles.StateInterface (public const String)
      Method: Create --[ReferencesField]--> Field: ConcreteState
        Field: Roles.ConcreteState (public const String)
      Method: Create --[ReferencesField]--> Field: StateContext
        Field: Roles.StateContext (public const String)
      Method: Create --[ReferencesField]--> Field: StateContextCandidate
        Field: Roles.StateContextCandidate (public const String)
      Method: Create --[ReferencesField]--> Field: StateNameHint
        Field: Roles.StateNameHint (public const String)
      Method: Create --[Uses]--> Property: Checks
      Method: Create --[Creates]--> Class: PatternResult
      Method: Create --[ReferencesField]--> Field: State
      Method: Create --[Uses]--> Property: Classification
      Method: Create --[ReferencesField]--> Field: PatternRole
Class: PhoneDisplay (Abstract=False)
  Class: PhoneDisplay --[Implements]--> Interface: IObserver
    Interface: IObserver
  Class: PhoneDisplay --[HasMethod]--> Method: Update
Class: SimpleWorker (Abstract=False)
  Class: SimpleWorker --[Implements]--> Interface: IWorker
    Interface: IWorker
  Class: SimpleWorker --[HasMethod]--> Method: Work
    Method: Work (Returns Void, Abstract=False)
Class: MathUtils (Abstract=False)
  Class: MathUtils --[HasMethod]--> Method: Add
    Method: Add (Returns Int32, Abstract=False)
Class: ConcreteWorker (Abstract=False)
  Class: ConcreteWorker --[Inherits]--> Class: AbstractWorker
    Class: AbstractWorker (Abstract=True)
      Class: AbstractWorker --[HasMethod]--> Method: DoJob
        Method: DoJob (Returns Void, Abstract=True)
  Class: ConcreteWorker --[HasMethod]--> Method: DoJob
    Method: DoJob (Returns Void, Abstract=False)
      Method: DoJob --[Overrides]--> Method: DoJob
Class: PlainWorker (Abstract=False)
  Class: PlainWorker --[HasMethod]--> Method: DoWork
    Method: DoWork (Returns Void, Abstract=False)
Class: EmailNotifierAdapter (Abstract=False)
  Class: EmailNotifierAdapter --[Implements]--> Interface: IAdapterNotifier
    Interface: IAdapterNotifier
  Class: EmailNotifierAdapter --[HasField]--> Field: _email
    Field: EmailNotifierAdapter._email (private readonly AdapteeEmailService)
      Field: _email --[Uses]--> Class: AdapteeEmailService
        Class: AdapteeEmailService (Abstract=False)
          Class: AdapteeEmailService --[HasMethod]--> Method: SendEmail
            Method: SendEmail (Returns Void, Abstract=False)
  Class: EmailNotifierAdapter --[HasConstructor]--> Constructor: EmailNotifierAdapter..ctor
    Constructor: EmailNotifierAdapter..ctor
      Constructor: EmailNotifierAdapter..ctor --[HasConstructor]--> Constructor: EmailNotifierAdapter..ctor
  Class: EmailNotifierAdapter --[HasMethod]--> Method: Notify
    Method: Notify (Returns Void, Abstract=False)
      Method: Notify --[Calls]--> Method: SendEmail
      Method: Notify --[ReferencesField]--> Field: _email
Class: MediaPlayerAdapter (Abstract=False)
  Class: MediaPlayerAdapter --[Implements]--> Interface: IAdapterMediaPlayer
    Interface: IAdapterMediaPlayer
  Class: MediaPlayerAdapter --[HasField]--> Field: _library
    Field: MediaPlayerAdapter._library (private readonly AdapteeMediaLibrary)
      Field: _library --[Uses]--> Class: AdapteeMediaLibrary
        Class: AdapteeMediaLibrary (Abstract=False)
          Class: AdapteeMediaLibrary --[HasMethod]--> Method: PlayFile
            Method: PlayFile (Returns Void, Abstract=False)
  Class: MediaPlayerAdapter --[HasConstructor]--> Constructor: MediaPlayerAdapter..ctor
    Constructor: MediaPlayerAdapter..ctor
      Constructor: MediaPlayerAdapter..ctor --[HasConstructor]--> Constructor: MediaPlayerAdapter..ctor
  Class: MediaPlayerAdapter --[HasMethod]--> Method: Play
    Method: Play (Returns Void, Abstract=False)
      Method: Play --[Calls]--> Method: PlayFile
      Method: Play --[ReferencesField]--> Field: _library
Class: ConcreteAdapter1 (Abstract=False)
  Class: ConcreteAdapter1 --[Implements]--> Interface: IAdapterTarget1
    Interface: IAdapterTarget1
  Class: ConcreteAdapter1 --[HasField]--> Field: _adaptee
    Field: ConcreteAdapter1._adaptee (private readonly Adaptee1)
      Field: _adaptee --[Uses]--> Class: Adaptee1
        Class: Adaptee1 (Abstract=False)
          Class: Adaptee1 --[HasMethod]--> Method: SpecificRequest
            Method: SpecificRequest (Returns Void, Abstract=False)
  Class: ConcreteAdapter1 --[HasConstructor]--> Constructor: ConcreteAdapter1..ctor
    Constructor: ConcreteAdapter1..ctor
      Constructor: ConcreteAdapter1..ctor --[HasConstructor]--> Constructor: ConcreteAdapter1..ctor
  Class: ConcreteAdapter1 --[HasMethod]--> Method: Request
    Method: Request (Returns Void, Abstract=False)
      Method: Request --[Calls]--> Method: SpecificRequest
      Method: Request --[ReferencesField]--> Field: _adaptee
Class: AdapterTest (Abstract=False)
  Class: AdapterTest --[Implements]--> Interface: ITarget
    Interface: ITarget
  Class: AdapterTest --[HasField]--> Field: _adaptee
    Field: AdapterTest._adaptee (private readonly AdapteeTest)
      Field: _adaptee --[Uses]--> Class: AdapteeTest
        Class: AdapteeTest (Abstract=False)
          Class: AdapteeTest --[HasMethod]--> Method: SpecificRequest
            Method: SpecificRequest (Returns Void, Abstract=False)
  Class: AdapterTest --[HasConstructor]--> Constructor: AdapterTest..ctor
    Constructor: AdapterTest..ctor
      Constructor: AdapterTest..ctor --[HasConstructor]--> Constructor: AdapterTest..ctor
  Class: AdapterTest --[HasMethod]--> Method: Request
    Method: Request (Returns Void, Abstract=False)
      Method: Request --[Calls]--> Method: SpecificRequest
      Method: Request --[ReferencesField]--> Field: _adaptee
Class: Bus (Abstract=False)
  Class: Bus --[Implements]--> Interface: TransportMode
    Interface: TransportMode
Class: Plane (Abstract=False)
  Class: Plane --[Implements]--> Interface: TransportMode
Class: HybridTransportFactory (Abstract=False)
  Class: HybridTransportFactory --[Inherits]--> Class: TransportFactory
    Class: TransportFactory (Abstract=True)
      Class: TransportFactory --[HasMethod]--> Method: CreatePlane
        Method: CreatePlane (Returns TransportMode, Abstract=True)
      Class: TransportFactory --[HasMethod]--> Method: CreateBus
        Method: CreateBus (Returns TransportMode, Abstract=True)
  Class: HybridTransportFactory --[HasMethod]--> Method: CreatePlane
    Method: CreatePlane (Returns TransportMode, Abstract=False)
      Method: CreatePlane --[Creates]--> Class: Plane
      Method: CreatePlane --[Overrides]--> Method: CreatePlane
  Class: HybridTransportFactory --[HasMethod]--> Method: CreateBus
    Method: CreateBus (Returns TransportMode, Abstract=False)
      Method: CreateBus --[Overrides]--> Method: CreateBus
Class: WkObsrvrDisplay (Abstract=False)
  Class: WkObsrvrDisplay --[Implements]--> Interface: IObserver4
    Interface: IObserver4
  Class: WkObsrvrDisplay --[HasMethod]--> Method: Update
    Method: Update (Returns Void, Abstract=False)
Class: WeakObserverPublisher (Abstract=False)
  Class: WeakObserverPublisher --[HasField]--> Field: _observers
    Field: WeakObserverPublisher._observers (private readonly List)
  Class: WeakObserverPublisher --[HasMethod]--> Method: AddObserver
    Method: AddObserver (Returns Void, Abstract=False)
      Method: AddObserver --[ReferencesField]--> Field: _observers
  Class: WeakObserverPublisher --[HasMethod]--> Method: Notify
    Method: Notify (Returns Void, Abstract=False)
      Method: Notify --[ReferencesField]--> Field: _observers
      Method: Notify --[Calls]--> Method: Update
        Method: Update (Returns Void, Abstract=True)
          Method: Update --[ImplementedBy]--> Method: Update
Class: AdapterRuleFactory (Abstract=False)
  Class: AdapterRuleFactory --[HasMethod]--> Method: Create
    Method: Create (Returns PatternRule, Abstract=False)
      Method: Create --[Returns]--> Class: PatternRule
      Method: Create --[Calls]--> Method: AddCheck
      Method: Create --[Creates]--> Class: PatternRule
      Method: Create --[Uses]--> Property: Symbol
      Method: Create --[Uses]--> Property: IsAbstract
      Method: Create --[ReferencesField]--> Field: Empty
      Method: Create --[Calls]--> Method: Success
      Method: Create --[ReferencesField]--> Field: Target
        Field: Roles.Target (public const String)
      Method: Create --[Uses]--> Property: Registry
      Method: Create --[ReferencesField]--> Field: AdapterCandidate
        Field: Roles.AdapterCandidate (public const String)
      Method: Create --[ReferencesField]--> Field: Adapter
        Field: Roles.Adapter (public const String)
      Method: Create --[ReferencesField]--> Field: Adaptee
        Field: Roles.Adaptee (public const String)
      Method: Create --[Uses]--> Property: Symbol
Class: Program1 (Abstract=False)
  Class: Program1 --[HasMethod]--> Method: Main1
    Method: Main1 (Returns Void, Abstract=False)
      Method: Main1 --[Creates]--> Class: Publisher
        Class: Publisher (Abstract=False)
          Class: Publisher --[HasEvent]--> Event: SomethingHappened
            Event: SomethingHappened (Type=EventHandler)
              Event: SomethingHappened --[HasEvent]--> Class: Publisher
          Class: Publisher --[HasMethod]--> Method: Trigger
            Method: Trigger (Returns Void, Abstract=False)
      Method: Main1 --[Creates]--> Class: Subscriber
        Class: Subscriber (Abstract=False)
          Class: Subscriber --[HasMethod]--> Method: OnSomething
            Method: OnSomething (Returns Void, Abstract=False)
      Method: Main1 --[Calls]--> Method: Trigger
Class: CashPayment (Abstract=False)
  Class: CashPayment --[Inherits]--> Class: PaymentBase
    Class: PaymentBase (Abstract=True)
      Class: PaymentBase --[HasMethod]--> Method: Pay
        Method: Pay (Returns Void, Abstract=True)
  Class: CashPayment --[HasMethod]--> Method: Pay
    Method: Pay (Returns Void, Abstract=False)
      Method: Pay --[Overrides]--> Method: Pay
Class: CardPayment (Abstract=False)
  Class: CardPayment --[Inherits]--> Class: PaymentBase
  Class: CardPayment --[HasMethod]--> Method: Pay
    Method: Pay (Returns Void, Abstract=False)
      Method: Pay --[Overrides]--> Method: Pay
Class: DataProcessor (Abstract=False)
  Class: DataProcessor --[HasField]--> Field: _store
    Field: DataProcessor._store (private readonly IDataStore)
  Class: DataProcessor --[HasConstructor]--> Constructor: DataProcessor..ctor
    Constructor: DataProcessor..ctor
      Constructor: DataProcessor..ctor --[HasConstructor]--> Constructor: DataProcessor..ctor
  Class: DataProcessor --[HasMethod]--> Method: Process
    Method: Process (Returns Void, Abstract=False)
Class: FileDataStore (Abstract=False)
  Class: FileDataStore --[Implements]--> Interface: IDataStore
    Interface: IDataStore
  Class: FileDataStore --[HasMethod]--> Method: Save
    Method: Save (Returns Void, Abstract=False)
Class: SquareShape (Abstract=False)
  Class: SquareShape --[Implements]--> Interface: IGeoShape
    Interface: IGeoShape
  Class: SquareShape --[HasMethod]--> Method: Draw
    Method: Draw (Returns Void, Abstract=False)
Class: CircleShape (Abstract=False)
  Class: CircleShape --[Implements]--> Interface: IGeoShape
  Class: CircleShape --[HasMethod]--> Method: Draw
    Method: Draw (Returns Void, Abstract=False)
Class: NotificationManager (Abstract=False)
  Class: NotificationManager --[HasField]--> Field: _notification
    Field: NotificationManager._notification (private readonly INotification)
  Class: NotificationManager --[HasConstructor]--> Constructor: NotificationManager..ctor
    Constructor: NotificationManager..ctor
      Constructor: NotificationManager..ctor --[HasConstructor]--> Constructor: NotificationManager..ctor
  Class: NotificationManager --[HasMethod]--> Method: NotifyAll
    Method: NotifyAll (Returns Void, Abstract=False)
Class: SmsNotification (Abstract=False)
  Class: SmsNotification --[Implements]--> Interface: INotification
    Interface: INotification
  Class: SmsNotification --[HasMethod]--> Method: Send
    Method: Send (Returns Void, Abstract=False)
Class: EmailNotification (Abstract=False)
  Class: EmailNotification --[Implements]--> Interface: INotification
  Class: EmailNotification --[HasMethod]--> Method: Send
    Method: Send (Returns Void, Abstract=False)
Class: Navigator (Abstract=False)
  Class: Navigator --[HasField]--> Field: _pathfinder
    Field: Navigator._pathfinder (private readonly IPathfinding)
  Class: Navigator --[HasConstructor]--> Constructor: Navigator..ctor
    Constructor: Navigator..ctor
      Constructor: Navigator..ctor --[HasConstructor]--> Constructor: Navigator..ctor
  Class: Navigator --[HasMethod]--> Method: Navigate
    Method: Navigate (Returns Void, Abstract=False)
      Method: Navigate --[Calls]--> Method: FindPath
        Method: FindPath (Returns Void, Abstract=True)
          Method: FindPath --[ImplementedBy]--> Method: FindPath
            Method: FindPath (Returns Void, Abstract=False)
          Method: FindPath --[ImplementedBy]--> Method: FindPath
            Method: FindPath (Returns Void, Abstract=False)
      Method: Navigate --[ReferencesField]--> Field: _pathfinder
Class: AStarPathfinding (Abstract=False)
  Class: AStarPathfinding --[Implements]--> Interface: IPathfinding
    Interface: IPathfinding
  Class: AStarPathfinding --[HasMethod]--> Method: FindPath
Class: DijkstraPathfinding (Abstract=False)
  Class: DijkstraPathfinding --[Implements]--> Interface: IPathfinding
  Class: DijkstraPathfinding --[HasMethod]--> Method: FindPath
Class: CompressionTool (Abstract=False)
  Class: CompressionTool --[HasField]--> Field: _algo
    Field: CompressionTool._algo (private readonly ICompressionAlgo)
  Class: CompressionTool --[HasConstructor]--> Constructor: CompressionTool..ctor
    Constructor: CompressionTool..ctor
      Constructor: CompressionTool..ctor --[HasConstructor]--> Constructor: CompressionTool..ctor
  Class: CompressionTool --[HasMethod]--> Method: Run
    Method: Run (Returns Void, Abstract=False)
      Method: Run --[Calls]--> Method: Compress
        Method: Compress (Returns Void, Abstract=True)
          Method: Compress --[ImplementedBy]--> Method: Compress
            Method: Compress (Returns Void, Abstract=False)
          Method: Compress --[ImplementedBy]--> Method: Compress
            Method: Compress (Returns Void, Abstract=False)
      Method: Run --[ReferencesField]--> Field: _algo
Class: RarAlgo (Abstract=False)
  Class: RarAlgo --[Implements]--> Interface: ICompressionAlgo
    Interface: ICompressionAlgo
  Class: RarAlgo --[HasMethod]--> Method: Compress
Class: ZipAlgo (Abstract=False)
  Class: ZipAlgo --[Implements]--> Interface: ICompressionAlgo
  Class: ZipAlgo --[HasMethod]--> Method: Compress
Class: WindowDisplay (Abstract=False)
  Class: WindowDisplay --[Implements]--> Interface: IObserver
  Class: WindowDisplay --[HasMethod]--> Method: Update
Class: TypeHelper (Abstract=False)
  Class: TypeHelper --[HasMethod]--> Method: GetElementType
  Class: TypeHelper --[HasMethod]--> Method: GetInnermostElementType
    Method: GetInnermostElementType (Returns ITypeSymbol, Abstract=False)
      Method: GetInnermostElementType --[Calls]--> Method: GetElementType
Class: PdfCreator (Abstract=False)
  Class: PdfCreator --[Inherits]--> Class: DocumentCreator
    Class: DocumentCreator (Abstract=False)
      Class: DocumentCreator --[HasMethod]--> Method: CreateDocument
        Method: CreateDocument (Returns IDocument, Abstract=False)
          Method: CreateDocument --[Creates]--> Class: DefaultDocument
            Class: DefaultDocument (Abstract=False)
              Class: DefaultDocument --[Implements]--> Interface: IDocument
                Interface: IDocument
              Class: DefaultDocument --[HasMethod]--> Method: Print
                Method: Print (Returns Void, Abstract=False)
      Class: DocumentCreator --[HasMethod]--> Method: Render
        Method: Render (Returns Void, Abstract=False)
          Method: Render --[Calls]--> Method: CreateDocument
          Method: Render --[Calls]--> Method: Print
            Method: Print (Returns Void, Abstract=True)
              Method: Print --[ImplementedBy]--> Method: Print
                Method: Print (Returns Void, Abstract=False)
              Method: Print --[ImplementedBy]--> Method: Print
  Class: PdfCreator --[HasMethod]--> Method: CreateDocument
    Method: CreateDocument (Returns IDocument, Abstract=False)
      Method: CreateDocument --[Creates]--> Class: PdfDocument
        Class: PdfDocument (Abstract=False)
          Class: PdfDocument --[Implements]--> Interface: IDocument
          Class: PdfDocument --[HasMethod]--> Method: Print
      Method: CreateDocument --[Overrides]--> Method: CreateDocument
Class: Square (Abstract=False)
  Class: Square --[Implements]--> Interface: Shape
    Interface: Shape
Class: Circle (Abstract=False)
  Class: Circle --[Implements]--> Interface: Shape
Class: SquareFactory (Abstract=False)
  Class: SquareFactory --[Inherits]--> Class: ShapeFactory
    Class: ShapeFactory (Abstract=True)
      Class: ShapeFactory --[HasMethod]--> Method: CreateShape
        Method: CreateShape (Returns Shape, Abstract=True)
  Class: SquareFactory --[HasMethod]--> Method: CreateShape
    Method: CreateShape (Returns Shape, Abstract=False)
      Method: CreateShape --[Creates]--> Class: Square
      Method: CreateShape --[Overrides]--> Method: CreateShape
Class: CircleFactory (Abstract=False)
  Class: CircleFactory --[Inherits]--> Class: ShapeFactory
  Class: CircleFactory --[HasMethod]--> Method: CreateShape
    Method: CreateShape (Returns Shape, Abstract=False)
      Method: CreateShape --[Creates]--> Class: Circle
      Method: CreateShape --[Overrides]--> Method: CreateShape
Class: LazySingleton (Abstract=False)
  Class: LazySingleton --[HasField]--> Field: _instance
    Field: LazySingleton._instance (private static readonly Lazy)
  Class: LazySingleton --[HasConstructor]--> Constructor: LazySingleton..ctor
    Constructor: LazySingleton..ctor
      Constructor: LazySingleton..ctor --[HasConstructor]--> Constructor: LazySingleton..ctor
  Class: LazySingleton --[HasProperty]--> Property: Instance
    Property: Instance
      Property: Instance --[ReferencesField]--> Field: _instance
Class: GraphJsonExporter (Abstract=False)
  Class: GraphJsonExporter --[HasMethod]--> Method: Export
    Method: Export (Returns Void, Abstract=False)
      Method: Export --[Uses]--> Class: NodeRegistry
      Method: Export --[Uses]--> Property: Symbol
        Property: Symbol
      Method: Export --[Uses]--> Property: Symbol
      Method: Export --[Uses]--> Property: Symbol
      Method: Export --[Uses]--> Property: Symbol
      Method: Export --[Uses]--> Property: Symbol
      Method: Export --[Uses]--> Property: Symbol
      Method: Export --[Uses]--> Property: Symbol
      Method: Export --[Uses]--> Property: Edges
      Method: Export --[Uses]--> Property: Target
      Method: Export --[Uses]--> Property: Type
Class: CarDisplay (Abstract=False)
  Class: CarDisplay --[Implements]--> Interface: IObserver1
    Interface: IObserver1
  Class: CarDisplay --[HasMethod]--> Method: Update
    Method: Update (Returns Void, Abstract=False)
Class: TrafficLight (Abstract=False)
  Class: TrafficLight --[HasField]--> Field: _observers
    Field: TrafficLight._observers (private List)
  Class: TrafficLight --[HasProperty]--> Property: Observers
    Property: Observers
      Property: Observers --[ReferencesField]--> Field: _observers
  Class: TrafficLight --[HasMethod]--> Method: Attach
    Method: Attach (Returns Void, Abstract=False)
      Method: Attach --[ReferencesField]--> Field: _observers
  Class: TrafficLight --[HasMethod]--> Method: NotifyChange
    Method: NotifyChange (Returns Void, Abstract=False)
      Method: NotifyChange --[Uses]--> Property: Observers
      Method: NotifyChange --[Calls]--> Method: Update
        Method: Update (Returns Void, Abstract=True)
          Method: Update --[ImplementedBy]--> Method: Update
Class: GraphPrinter (Abstract=False)
  Class: GraphPrinter --[HasField]--> Field: _outputPath
    Field: GraphPrinter._outputPath (private readonly String)
  Class: GraphPrinter --[HasField]--> Field: _lines
    Field: GraphPrinter._lines (private readonly List)
  Class: GraphPrinter --[HasConstructor]--> Constructor: GraphPrinter..ctor
    Constructor: GraphPrinter..ctor
      Constructor: GraphPrinter..ctor --[HasConstructor]--> Constructor: GraphPrinter..ctor
  Class: GraphPrinter --[HasMethod]--> Method: PrintGraph
    Method: PrintGraph (Returns Void, Abstract=False)
      Method: PrintGraph --[Uses]--> Class: NodeRegistry
      Method: PrintGraph --[ReferencesField]--> Field: _lines
      Method: PrintGraph --[Calls]--> Method: PrintNode
        Method: PrintNode (Returns Void, Abstract=False)
          Method: PrintNode --[ReferencesField]--> Field: _lines
          Method: PrintNode --[Calls]--> Method: FormatNodeHeader
            Method: FormatNodeHeader (Returns String, Abstract=False)
              Method: FormatNodeHeader --[Uses]--> Property: Symbol
              Method: FormatNodeHeader --[Uses]--> Property: Symbol
              Method: FormatNodeHeader --[Uses]--> Property: Symbol
              Method: FormatNodeHeader --[Uses]--> Property: Symbol
              Method: FormatNodeHeader --[Uses]--> Property: Symbol
              Method: FormatNodeHeader --[Calls]--> Method: FormatFieldHeader
                Method: FormatFieldHeader (Returns String, Abstract=False)
                  Method: FormatFieldHeader --[Uses]--> Class: FieldNode
                  Method: FormatFieldHeader --[Uses]--> Property: Symbol
                  Method: FormatFieldHeader --[Calls]--> Method: AccessibilityToString
                    Method: AccessibilityToString (Returns String, Abstract=False)
              Method: FormatNodeHeader --[Uses]--> Property: Symbol
          Method: PrintNode --[Uses]--> Property: Edges
          Method: PrintNode --[Calls]--> Method: PrintEdge
            Method: PrintEdge (Returns Void, Abstract=False)
              Method: PrintEdge --[Uses]--> Class: EdgeNode
              Method: PrintEdge --[Calls]--> Method: FormatNodeShort
                Method: FormatNodeShort (Returns String, Abstract=False)
                  Method: FormatNodeShort --[Uses]--> Property: Symbol
                  Method: FormatNodeShort --[Uses]--> Property: Symbol
                  Method: FormatNodeShort --[Uses]--> Property: Symbol
                  Method: FormatNodeShort --[Uses]--> Property: Symbol
                  Method: FormatNodeShort --[Uses]--> Property: Symbol
                  Method: FormatNodeShort --[Uses]--> Property: Symbol
                  Method: FormatNodeShort --[Uses]--> Property: Symbol
              Method: PrintEdge --[Uses]--> Property: Target
              Method: PrintEdge --[ReferencesField]--> Field: _lines
              Method: PrintEdge --[Uses]--> Property: Type
              Method: PrintEdge --[Calls]--> Method: PrintNode
      Method: PrintGraph --[ReferencesField]--> Field: _outputPath
  Class: GraphPrinter --[HasMethod]--> Method: FormatNodeHeader
  Class: GraphPrinter --[HasMethod]--> Method: FormatFieldHeader
  Class: GraphPrinter --[HasMethod]--> Method: AccessibilityToString
  Class: GraphPrinter --[HasMethod]--> Method: FormatNodeShort
  Class: GraphPrinter --[HasMethod]--> Method: PrintNode
  Class: GraphPrinter --[HasMethod]--> Method: PrintEdge
Class: WindowsDialogFactory (Abstract=False)
  Class: WindowsDialogFactory --[Inherits]--> Class: WindowsGuiFactory
    Class: WindowsGuiFactory (Abstract=True)
      Class: WindowsGuiFactory --[Inherits]--> Class: GuiFactory
        Class: GuiFactory (Abstract=True)
          Class: GuiFactory --[HasMethod]--> Method: CreateButton
            Method: CreateButton (Returns Button, Abstract=True)
  Class: WindowsDialogFactory --[HasMethod]--> Method: CreateButton
    Method: CreateButton (Returns Button, Abstract=False)
      Method: CreateButton --[Creates]--> Class: WindowsButton
        Class: WindowsButton (Abstract=False)
          Class: WindowsButton --[Implements]--> Interface: Button
            Interface: Button
      Method: CreateButton --[Overrides]--> Method: CreateButton
Class: HtmlButton (Abstract=False)
  Class: HtmlButton --[Implements]--> Interface: Button
Class: WebDialog (Abstract=False)
  Class: WebDialog --[Inherits]--> Class: Dialog
    Class: Dialog (Abstract=True)
      Class: Dialog --[HasMethod]--> Method: CreateButton
        Method: CreateButton (Returns Button, Abstract=True)
  Class: WebDialog --[HasMethod]--> Method: CreateButton
    Method: CreateButton (Returns Button, Abstract=False)
      Method: CreateButton --[Creates]--> Class: HtmlButton
      Method: CreateButton --[Overrides]--> Method: CreateButton
Class: WindowsDialog (Abstract=False)
  Class: WindowsDialog --[Inherits]--> Class: Dialog
  Class: WindowsDialog --[HasMethod]--> Method: CreateButton
    Method: CreateButton (Returns Button, Abstract=False)
      Method: CreateButton --[Creates]--> Class: WindowsButton
      Method: CreateButton --[Overrides]--> Method: CreateButton
Class: Roles (Abstract=False)
  Class: Roles --[HasField]--> Field: AdapterCandidate
  Class: Roles --[HasField]--> Field: Adapter
  Class: Roles --[HasField]--> Field: Adaptee
  Class: Roles --[HasField]--> Field: Target
  Class: Roles --[HasField]--> Field: AbstractFactory
    Field: Roles.AbstractFactory (public const String)
  Class: Roles --[HasField]--> Field: ConcreteFactory
    Field: Roles.ConcreteFactory (public const String)
  Class: Roles --[HasField]--> Field: Product
    Field: Roles.Product (public const String)
  Class: Roles --[HasField]--> Field: InvalidProduct
    Field: Roles.InvalidProduct (public const String)
  Class: Roles --[HasField]--> Field: UnfulfilledReturn
    Field: Roles.UnfulfilledReturn (public const String)
  Class: Roles --[HasField]--> Field: StateInterface
  Class: Roles --[HasField]--> Field: ConcreteState
  Class: Roles --[HasField]--> Field: StateContextCandidate
  Class: Roles --[HasField]--> Field: StateContext
  Class: Roles --[HasField]--> Field: StateNameHint
  Class: Roles --[HasField]--> Field: Strategy
  Class: Roles --[HasField]--> Field: ConcreteStrategy
  Class: Roles --[HasField]--> Field: ContextCandidate
  Class: Roles --[HasField]--> Field: Context
  Class: Roles --[HasField]--> Field: Subject
    Field: Roles.Subject (public const String)
  Class: Roles --[HasField]--> Field: Observer
    Field: Roles.Observer (public const String)
Class: DCLSingleton (Abstract=False)
  Class: DCLSingleton --[HasField]--> Field: _instance
    Field: DCLSingleton._instance (private static DCLSingleton)
      Field: _instance --[Uses]--> Class: DCLSingleton
  Class: DCLSingleton --[HasField]--> Field: _lock
    Field: DCLSingleton._lock (private static readonly Object)
  Class: DCLSingleton --[HasConstructor]--> Constructor: DCLSingleton..ctor
    Constructor: DCLSingleton..ctor
      Constructor: DCLSingleton..ctor --[HasConstructor]--> Constructor: DCLSingleton..ctor
  Class: DCLSingleton --[HasProperty]--> Property: Instance
    Property: Instance
      Property: Instance --[ReferencesField]--> Field: _instance
      Property: Instance --[ReferencesField]--> Field: _lock
      Property: Instance --[Uses]--> Class: DCLSingleton
Class: StaticCtorSingleton (Abstract=False)
  Class: StaticCtorSingleton --[HasField]--> Field: Instance
    Field: StaticCtorSingleton.Instance (public static readonly StaticCtorSingleton)
      Field: Instance --[Uses]--> Class: StaticCtorSingleton
  Class: StaticCtorSingleton --[HasConstructor]--> Constructor: StaticCtorSingleton..ctor
    Constructor: StaticCtorSingleton..ctor
      Constructor: StaticCtorSingleton..ctor --[HasConstructor]--> Constructor: StaticCtorSingleton..ctor
      Constructor: StaticCtorSingleton..ctor --[Creates]--> Class: StaticCtorSingleton
  Class: StaticCtorSingleton --[HasConstructor]--> Constructor: StaticCtorSingleton..ctor
    Constructor: StaticCtorSingleton..ctor
      Constructor: StaticCtorSingleton..ctor --[HasConstructor]--> Constructor: StaticCtorSingleton..ctor
Class: Extensions (Abstract=False)
  Class: Extensions --[HasMethod]--> Method: Let
    Method: Let (Returns Void, Abstract=False)
Class: CodeAnalysisServiceRunner (Abstract=False)
  Class: CodeAnalysisServiceRunner --[HasField]--> Field: _syntaxTrees
    Field: CodeAnalysisServiceRunner._syntaxTrees (private readonly List)
  Class: CodeAnalysisServiceRunner --[HasField]--> Field: _semanticModels
    Field: CodeAnalysisServiceRunner._semanticModels (private readonly Dictionary)
  Class: CodeAnalysisServiceRunner --[HasProperty]--> Property: Graph
    Property: Graph
  Class: CodeAnalysisServiceRunner --[HasProperty]--> Property: FailedFiles
    Property: FailedFiles
  Class: CodeAnalysisServiceRunner --[HasMethod]--> Method: AnalyzeAsync
    Method: AnalyzeAsync (Returns Task, Abstract=False)
      Method: AnalyzeAsync --[ReferencesField]--> Field: _syntaxTrees
      Method: AnalyzeAsync --[Uses]--> Property: FailedFiles
      Method: AnalyzeAsync --[ReferencesField]--> Field: _semanticModels
  Class: CodeAnalysisServiceRunner --[HasMethod]--> Method: BuildGraph
    Method: BuildGraph (Returns Void, Abstract=False)
      Method: BuildGraph --[ReferencesField]--> Field: _semanticModels
      Method: BuildGraph --[Uses]--> Property: Graph
      Method: BuildGraph --[Creates]--> Class: GraphBuilder
      Method: BuildGraph --[Calls]--> Method: BuildGraph
      Method: BuildGraph --[Uses]--> Property: FailedFiles
  Class: CodeAnalysisServiceRunner --[HasMethod]--> Method: PrintGraph
    Method: PrintGraph (Returns Void, Abstract=False)
      Method: PrintGraph --[Creates]--> Class: GraphPrinter
      Method: PrintGraph --[Uses]--> Property: Graph
      Method: PrintGraph --[Calls]--> Method: PrintGraph
      Method: PrintGraph --[Uses]--> Property: Registry
      Method: PrintGraph --[ReferencesField]--> Field: _syntaxTrees
  Class: CodeAnalysisServiceRunner --[HasMethod]--> Method: CreateGraphView
    Method: CreateGraphView (Returns Void, Abstract=False)
      Method: CreateGraphView --[Uses]--> Property: Graph
      Method: CreateGraphView --[Calls]--> Method: Export
      Method: CreateGraphView --[Uses]--> Property: Registry
Class: FactoryMethodRuleFactory (Abstract=False)
  Class: FactoryMethodRuleFactory --[HasMethod]--> Method: Create
    Method: Create (Returns PatternRule, Abstract=False)
      Method: Create --[Returns]--> Class: PatternRule
      Method: Create --[Calls]--> Method: AddCheck
      Method: Create --[Creates]--> Class: PatternRule
      Method: Create --[ReferencesField]--> Field: Empty
      Method: Create --[Uses]--> Property: Symbol
      Method: Create --[Uses]--> Property: Edges
      Method: Create --[Uses]--> Property: Type
      Method: Create --[Calls]--> Method: Success
      Method: Create --[ReferencesField]--> Field: AbstractFactory
      Method: Create --[Uses]--> Property: IsAbstract
      Method: Create --[Uses]--> Property: Registry
      Method: Create --[Uses]--> Property: Symbol
      Method: Create --[ReferencesField]--> Field: ConcreteFactory
      Method: Create --[Uses]--> Property: Target
      Method: Create --[ReferencesField]--> Field: Product
      Method: Create --[ReferencesField]--> Field: UnfulfilledReturn
      Method: Create --[ReferencesField]--> Field: InvalidProduct
Class: FileLogger (Abstract=False)
  Class: FileLogger --[Implements]--> Interface: ILogger
    Interface: ILogger
Class: CachedLoggerFactory (Abstract=False)
  Class: CachedLoggerFactory --[Inherits]--> Class: LoggerFactory
    Class: LoggerFactory (Abstract=True)
      Class: LoggerFactory --[HasMethod]--> Method: CreateLogger
        Method: CreateLogger (Returns ILogger, Abstract=True)
  Class: CachedLoggerFactory --[HasField]--> Field: _logger
    Field: CachedLoggerFactory._logger (private static readonly ILogger)
  Class: CachedLoggerFactory --[HasMethod]--> Method: CreateLogger
    Method: CreateLogger (Returns ILogger, Abstract=False)
      Method: CreateLogger --[ReferencesField]--> Field: _logger
      Method: CreateLogger --[Overrides]--> Method: CreateLogger
Class: CalcSheet (Abstract=False)
  Class: CalcSheet --[Implements]--> Interface: Spreadsheet
    Interface: Spreadsheet
Class: ExcelSheet (Abstract=False)
  Class: ExcelSheet --[Implements]--> Interface: Spreadsheet
Class: WriterDoc (Abstract=False)
  Class: WriterDoc --[Implements]--> Interface: TextDocument
    Interface: TextDocument
Class: WordDoc (Abstract=False)
  Class: WordDoc --[Implements]--> Interface: TextDocument
Class: LibreApp (Abstract=False)
  Class: LibreApp --[Inherits]--> Class: DocumentApp
    Class: DocumentApp (Abstract=True)
      Class: DocumentApp --[HasMethod]--> Method: CreateTextDoc
        Method: CreateTextDoc (Returns TextDocument, Abstract=True)
      Class: DocumentApp --[HasMethod]--> Method: CreateSpreadsheet
        Method: CreateSpreadsheet (Returns Spreadsheet, Abstract=True)
  Class: LibreApp --[HasMethod]--> Method: CreateTextDoc
    Method: CreateTextDoc (Returns TextDocument, Abstract=False)
      Method: CreateTextDoc --[Creates]--> Class: WriterDoc
      Method: CreateTextDoc --[Overrides]--> Method: CreateTextDoc
  Class: LibreApp --[HasMethod]--> Method: CreateSpreadsheet
    Method: CreateSpreadsheet (Returns Spreadsheet, Abstract=False)
      Method: CreateSpreadsheet --[Creates]--> Class: CalcSheet
      Method: CreateSpreadsheet --[Overrides]--> Method: CreateSpreadsheet
Class: WordApp (Abstract=False)
  Class: WordApp --[Inherits]--> Class: DocumentApp
  Class: WordApp --[HasMethod]--> Method: CreateTextDoc
    Method: CreateTextDoc (Returns TextDocument, Abstract=False)
      Method: CreateTextDoc --[Creates]--> Class: WordDoc
      Method: CreateTextDoc --[Overrides]--> Method: CreateTextDoc
  Class: WordApp --[HasMethod]--> Method: CreateSpreadsheet
    Method: CreateSpreadsheet (Returns Spreadsheet, Abstract=False)
      Method: CreateSpreadsheet --[Creates]--> Class: ExcelSheet
      Method: CreateSpreadsheet --[Overrides]--> Method: CreateSpreadsheet
Class: GenericSingleton (Abstract=False)
  Class: GenericSingleton --[HasField]--> Field: _instance
    Field: GenericSingleton._instance (private static readonly T)
  Class: GenericSingleton --[HasConstructor]--> Constructor: GenericSingleton..ctor
    Constructor: GenericSingleton..ctor
      Constructor: GenericSingleton..ctor --[HasConstructor]--> Constructor: GenericSingleton..ctor
  Class: GenericSingleton --[HasProperty]--> Property: Instance
    Property: Instance
      Property: Instance --[ReferencesField]--> Field: _instance
Class: GraphQueries (Abstract=False)
  Class: GraphQueries --[HasMethod]--> Method: HasMethod
    Method: HasMethod (Returns Boolean, Abstract=False)
      Method: HasMethod --[Uses]--> Class: ClassNode
      Method: HasMethod --[Uses]--> Property: Edges
      Method: HasMethod --[Uses]--> Property: Type
      Method: HasMethod --[Uses]--> Property: Target
      Method: HasMethod --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: GetMethods
    Method: GetMethods (Returns IEnumerable, Abstract=False)
      Method: GetMethods --[Uses]--> Class: ClassNode
      Method: GetMethods --[Uses]--> Property: Edges
      Method: GetMethods --[Uses]--> Property: Type
      Method: GetMethods --[Uses]--> Property: Target
  Class: GraphQueries --[HasMethod]--> Method: HasProperty
    Method: HasProperty (Returns Boolean, Abstract=False)
      Method: HasProperty --[Uses]--> Class: ClassNode
      Method: HasProperty --[Uses]--> Property: Edges
      Method: HasProperty --[Uses]--> Property: Type
      Method: HasProperty --[Uses]--> Property: Target
      Method: HasProperty --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: GetProperties
    Method: GetProperties (Returns IEnumerable, Abstract=False)
      Method: GetProperties --[Uses]--> Class: ClassNode
      Method: GetProperties --[Uses]--> Property: Edges
      Method: GetProperties --[Uses]--> Property: Type
      Method: GetProperties --[Uses]--> Property: Target
  Class: GraphQueries --[HasMethod]--> Method: ImplementsInterface
    Method: ImplementsInterface (Returns Boolean, Abstract=False)
      Method: ImplementsInterface --[Uses]--> Class: ClassNode
      Method: ImplementsInterface --[Uses]--> Property: Edges
      Method: ImplementsInterface --[Uses]--> Property: Type
      Method: ImplementsInterface --[Uses]--> Property: Target
      Method: ImplementsInterface --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: GetInterfaces
    Method: GetInterfaces (Returns IEnumerable, Abstract=False)
      Method: GetInterfaces --[Uses]--> Class: ClassNode
      Method: GetInterfaces --[Uses]--> Property: Edges
      Method: GetInterfaces --[Uses]--> Property: Type
      Method: GetInterfaces --[Uses]--> Property: Target
  Class: GraphQueries --[HasMethod]--> Method: InheritsFrom
    Method: InheritsFrom (Returns Boolean, Abstract=False)
      Method: InheritsFrom --[Uses]--> Class: ClassNode
      Method: InheritsFrom --[Uses]--> Property: Edges
      Method: InheritsFrom --[Uses]--> Property: Type
      Method: InheritsFrom --[Uses]--> Property: Target
      Method: InheritsFrom --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: InheritsFrom
    Method: InheritsFrom (Returns Boolean, Abstract=False)
      Method: InheritsFrom --[Uses]--> Class: ClassNode
      Method: InheritsFrom --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: GetFields
    Method: GetFields (Returns IEnumerable, Abstract=False)
      Method: GetFields --[Uses]--> Class: ClassNode
      Method: GetFields --[Uses]--> Property: Edges
      Method: GetFields --[Uses]--> Property: Type
      Method: GetFields --[Uses]--> Property: Target
  Class: GraphQueries --[HasMethod]--> Method: HasFieldOfType
    Method: HasFieldOfType (Returns Boolean, Abstract=False)
      Method: HasFieldOfType --[Uses]--> Class: ClassNode
      Method: HasFieldOfType --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: HasStaticFieldOfType
    Method: HasStaticFieldOfType (Returns Boolean, Abstract=False)
      Method: HasStaticFieldOfType --[Uses]--> Class: ClassNode
      Method: HasStaticFieldOfType --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: GetConstructors
    Method: GetConstructors (Returns IEnumerable, Abstract=False)
      Method: GetConstructors --[Uses]--> Class: ClassNode
      Method: GetConstructors --[Uses]--> Property: Edges
      Method: GetConstructors --[Uses]--> Property: Type
      Method: GetConstructors --[Uses]--> Property: Target
  Class: GraphQueries --[HasMethod]--> Method: HasPrivateConstructor
    Method: HasPrivateConstructor (Returns Boolean, Abstract=False)
      Method: HasPrivateConstructor --[Uses]--> Class: ClassNode
      Method: HasPrivateConstructor --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: CalledMethods
    Method: CalledMethods (Returns IEnumerable, Abstract=False)
      Method: CalledMethods --[Uses]--> Class: MethodNode
      Method: CalledMethods --[Uses]--> Property: Edges
      Method: CalledMethods --[Uses]--> Property: Type
      Method: CalledMethods --[Uses]--> Property: Target
  Class: GraphQueries --[HasMethod]--> Method: CallsMethod
    Method: CallsMethod (Returns Boolean, Abstract=False)
      Method: CallsMethod --[Uses]--> Class: MethodNode
      Method: CallsMethod --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: HasEvent
    Method: HasEvent (Returns Boolean, Abstract=False)
      Method: HasEvent --[Uses]--> Class: ClassNode
      Method: HasEvent --[Uses]--> Property: Edges
      Method: HasEvent --[Uses]--> Property: Type
  Class: GraphQueries --[HasMethod]--> Method: GetEvents
    Method: GetEvents (Returns IEnumerable, Abstract=False)
      Method: GetEvents --[Uses]--> Class: ClassNode
      Method: GetEvents --[Uses]--> Property: Edges
      Method: GetEvents --[Uses]--> Property: Type
      Method: GetEvents --[Uses]--> Property: Target
  Class: GraphQueries --[HasMethod]--> Method: GetCollectionElementTypes
    Method: GetCollectionElementTypes (Returns IEnumerable, Abstract=False)
      Method: GetCollectionElementTypes --[Uses]--> Class: ClassNode
      Method: GetCollectionElementTypes --[Uses]--> Property: Edges
      Method: GetCollectionElementTypes --[Uses]--> Property: Type
      Method: GetCollectionElementTypes --[Uses]--> Property: Target
      Method: GetCollectionElementTypes --[Uses]--> Property: Symbol
      Method: GetCollectionElementTypes --[Uses]--> Property: Symbol
      Method: GetCollectionElementTypes --[Calls]--> Method: GetElementType
      Method: GetCollectionElementTypes --[Calls]--> Method: GetInnermostElementType
  Class: GraphQueries --[HasMethod]--> Method: IsAssignableToAny
    Method: IsAssignableToAny (Returns Boolean, Abstract=False)
  Class: GraphQueries --[HasMethod]--> Method: GetImplementingTypes
    Method: GetImplementingTypes (Returns IEnumerable, Abstract=False)
      Method: GetImplementingTypes --[Uses]--> Class: MethodNode
      Method: GetImplementingTypes --[Uses]--> Property: Edges
      Method: GetImplementingTypes --[Uses]--> Property: Type
      Method: GetImplementingTypes --[Uses]--> Property: Target
      Method: GetImplementingTypes --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: ImplementsOrInherits
    Method: ImplementsOrInherits (Returns Boolean, Abstract=False)
  Class: GraphQueries --[HasMethod]--> Method: HasMethodWithParameterAssignableTo
    Method: HasMethodWithParameterAssignableTo (Returns Boolean, Abstract=False)
      Method: HasMethodWithParameterAssignableTo --[Uses]--> Class: ClassNode
      Method: HasMethodWithParameterAssignableTo --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: HasStaticFieldOfOwnType
    Method: HasStaticFieldOfOwnType (Returns Boolean, Abstract=False)
      Method: HasStaticFieldOfOwnType --[Uses]--> Class: ClassNode
      Method: HasStaticFieldOfOwnType --[Uses]--> Property: Symbol
      Method: HasStaticFieldOfOwnType --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: HasLazyStaticFieldOfOwnType
    Method: HasLazyStaticFieldOfOwnType (Returns Boolean, Abstract=False)
      Method: HasLazyStaticFieldOfOwnType --[Uses]--> Class: ClassNode
      Method: HasLazyStaticFieldOfOwnType --[Uses]--> Property: Symbol
      Method: HasLazyStaticFieldOfOwnType --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: HasNestedStaticHolderOfOwnType
    Method: HasNestedStaticHolderOfOwnType (Returns Boolean, Abstract=False)
      Method: HasNestedStaticHolderOfOwnType --[Uses]--> Class: ClassNode
      Method: HasNestedStaticHolderOfOwnType --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: HasGenericStaticFieldOfOwnType
    Method: HasGenericStaticFieldOfOwnType (Returns Boolean, Abstract=False)
      Method: HasGenericStaticFieldOfOwnType --[Uses]--> Class: ClassNode
      Method: HasGenericStaticFieldOfOwnType --[Uses]--> Property: Symbol
      Method: HasGenericStaticFieldOfOwnType --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: HasStaticPropertyOfOwnType
    Method: HasStaticPropertyOfOwnType (Returns Boolean, Abstract=False)
      Method: HasStaticPropertyOfOwnType --[Uses]--> Class: ClassNode
      Method: HasStaticPropertyOfOwnType --[Uses]--> Property: Symbol
      Method: HasStaticPropertyOfOwnType --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: HasStaticMethodOfOwnType
    Method: HasStaticMethodOfOwnType (Returns Boolean, Abstract=False)
      Method: HasStaticMethodOfOwnType --[Uses]--> Class: ClassNode
      Method: HasStaticMethodOfOwnType --[Uses]--> Property: Symbol
      Method: HasStaticMethodOfOwnType --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: HasStaticFieldAccessorOfOwnType
    Method: HasStaticFieldAccessorOfOwnType (Returns Boolean, Abstract=False)
      Method: HasStaticFieldAccessorOfOwnType --[Uses]--> Class: ClassNode
      Method: HasStaticFieldAccessorOfOwnType --[Uses]--> Property: Symbol
      Method: HasStaticFieldAccessorOfOwnType --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: ResolveMemberType
    Method: ResolveMemberType (Returns INamedTypeSymbol, Abstract=False)
      Method: ResolveMemberType --[Uses]--> Property: Symbol
      Method: ResolveMemberType --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: GetHeldTypes
    Method: GetHeldTypes (Returns IEnumerable, Abstract=False)
      Method: GetHeldTypes --[Uses]--> Class: ClassNode
      Method: GetHeldTypes --[Uses]--> Property: Symbol
      Method: GetHeldTypes --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: HasInjectionOf
    Method: HasInjectionOf (Returns Boolean, Abstract=False)
      Method: HasInjectionOf --[Uses]--> Class: ClassNode
      Method: HasInjectionOf --[Uses]--> Property: Symbol
      Method: HasInjectionOf --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: GetImplementorsOf
    Method: GetImplementorsOf (Returns IEnumerable, Abstract=False)
      Method: GetImplementorsOf --[Uses]--> Class: NodeRegistry
      Method: GetImplementorsOf --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: DelegatesToType
    Method: DelegatesToType (Returns Boolean, Abstract=False)
      Method: DelegatesToType --[Uses]--> Class: ClassNode
      Method: DelegatesToType --[Uses]--> Class: NodeRegistry
      Method: DelegatesToType --[Uses]--> Property: Symbol
      Method: DelegatesToType --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: MatchesTypeOrElement
    Method: MatchesTypeOrElement (Returns Boolean, Abstract=False)
      Method: MatchesTypeOrElement --[Calls]--> Method: GetElementType
  Class: GraphQueries --[HasMethod]--> Method: HoldsReferenceTo
    Method: HoldsReferenceTo (Returns Boolean, Abstract=False)
      Method: HoldsReferenceTo --[Uses]--> Class: ClassNode
      Method: HoldsReferenceTo --[Calls]--> Method: MatchesTypeOrElement
  Class: GraphQueries --[HasMethod]--> Method: DelegatesTo
    Method: DelegatesTo (Returns Boolean, Abstract=False)
      Method: DelegatesTo --[Uses]--> Class: ClassNode
      Method: DelegatesTo --[Uses]--> Class: NodeRegistry
      Method: DelegatesTo --[Calls]--> Method: MatchesTypeOrElement
      Method: DelegatesTo --[Uses]--> Property: Symbol
  Class: GraphQueries --[HasMethod]--> Method: HasStateSwitchMethod
    Method: HasStateSwitchMethod (Returns Boolean, Abstract=False)
      Method: HasStateSwitchMethod --[Uses]--> Class: ClassNode
      Method: HasStateSwitchMethod --[Uses]--> Property: Symbol
      Method: HasStateSwitchMethod --[Calls]--> Method: MatchesTypeOrElement
Class: Logger (Abstract=False)
  Class: Logger --[HasMethod]--> Method: Log
    Method: Log (Returns Void, Abstract=False)
Class: Program (Abstract=False)
  Class: Program --[HasMethod]--> Method: Main
    Method: Main (Returns Task, Abstract=False)
      Method: Main --[Calls]--> Method: PrintRepo
      Method: Main --[Creates]--> Class: CodeAnalysisServiceRunner
      Method: Main --[Calls]--> Method: AnalyzeAsync
      Method: Main --[Calls]--> Method: BuildGraph
      Method: Main --[Uses]--> Property: Graph
      Method: Main --[Calls]--> Method: PrintGraph
      Method: Main --[Calls]--> Method: CreateGraphView
      Method: Main --[Creates]--> Class: PatternAnalyserManager
      Method: Main --[Calls]--> Method: AnalyseAll
      Method: Main --[Calls]--> Method: PrintResults
Class: Comparers (Abstract=False)
  Class: Comparers --[HasField]--> Field: Edge
  Class: Comparers --[HasField]--> Field: PatternRole
Class: Bike (Abstract=False)
  Class: Bike --[Implements]--> Interface: Vehicle
    Interface: Vehicle
Class: Car (Abstract=False)
  Class: Car --[Implements]--> Interface: Vehicle
Class: BikeFactory (Abstract=False)
  Class: BikeFactory --[Inherits]--> Class: VehicleFactory
    Class: VehicleFactory (Abstract=True)
      Class: VehicleFactory --[HasMethod]--> Method: CreateVehicle
        Method: CreateVehicle (Returns Vehicle, Abstract=True)
  Class: BikeFactory --[HasMethod]--> Method: CreateVehicle
    Method: CreateVehicle (Returns Vehicle, Abstract=False)
      Method: CreateVehicle --[Creates]--> Class: Bike
      Method: CreateVehicle --[Overrides]--> Method: CreateVehicle
Class: CarFactory (Abstract=False)
  Class: CarFactory --[Inherits]--> Class: VehicleFactory
  Class: CarFactory --[HasMethod]--> Method: CreateVehicle
    Method: CreateVehicle (Returns Vehicle, Abstract=False)
      Method: CreateVehicle --[Creates]--> Class: Car
      Method: CreateVehicle --[Overrides]--> Method: CreateVehicle
Class: ObserverRuleFactory (Abstract=False)
  Class: ObserverRuleFactory --[HasMethod]--> Method: Create
    Method: Create (Returns PatternRule, Abstract=False)
      Method: Create --[Returns]--> Class: PatternRule
      Method: Create --[Calls]--> Method: AddCheck
      Method: Create --[Creates]--> Class: PatternRule
      Method: Create --[ReferencesField]--> Field: Empty
      Method: Create --[Calls]--> Method: Success
      Method: Create --[ReferencesField]--> Field: Subject
      Method: Create --[Uses]--> Property: Symbol
      Method: Create --[Uses]--> Property: Registry
      Method: Create --[ReferencesField]--> Field: Observer
Class: Logger (Abstract=False)
  Class: Logger --[HasField]--> Field: logFile
    Field: Logger.logFile (private static readonly String)
  Class: Logger --[HasMethod]--> Method: Log
    Method: Log (Returns Void, Abstract=False)
      Method: Log --[ReferencesField]--> Field: logFile
Class: TraderDisplay (Abstract=False)
  Class: TraderDisplay --[Implements]--> Interface: IObserver2
    Interface: IObserver2
  Class: TraderDisplay --[HasMethod]--> Method: Update
    Method: Update (Returns Void, Abstract=False)
Class: StockMarket (Abstract=False)
  Class: StockMarket --[HasProperty]--> Property: Observers
    Property: Observers
  Class: StockMarket --[HasMethod]--> Method: AddObserver
    Method: AddObserver (Returns Void, Abstract=False)
      Method: AddObserver --[Uses]--> Property: Observers
  Class: StockMarket --[HasMethod]--> Method: NotifyObservers
    Method: NotifyObservers (Returns Void, Abstract=False)
      Method: NotifyObservers --[Uses]--> Property: Observers
      Method: NotifyObservers --[Calls]--> Method: Update
        Method: Update (Returns Void, Abstract=True)
          Method: Update --[ImplementedBy]--> Method: Update
Class: Dog2 (Abstract=False)
  Class: Dog2 --[Implements]--> Interface: Animal2
    Interface: Animal2
Class: DogFactory (Abstract=False)
  Class: DogFactory --[Inherits]--> Class: MammalFactory
    Class: MammalFactory (Abstract=True)
      Class: MammalFactory --[Inherits]--> Class: BaseFactory
        Class: BaseFactory (Abstract=True)
          Class: BaseFactory --[HasMethod]--> Method: CreateAnimal
            Method: CreateAnimal (Returns Animal2, Abstract=True)
  Class: DogFactory --[HasMethod]--> Method: CreateAnimal
    Method: CreateAnimal (Returns Animal2, Abstract=False)
      Method: CreateAnimal --[Creates]--> Class: Dog2
      Method: CreateAnimal --[Overrides]--> Method: CreateAnimal
Class: Nested (Abstract=False)
  Class: Nested --[HasField]--> Field: Instance
    Field: Nested.Instance (internal static readonly HolderSingleton)
      Field: Instance --[Uses]--> Class: HolderSingleton
        Class: HolderSingleton (Abstract=False)
          Class: HolderSingleton --[HasConstructor]--> Constructor: HolderSingleton..ctor
            Constructor: HolderSingleton..ctor
              Constructor: HolderSingleton..ctor --[HasConstructor]--> Constructor: HolderSingleton..ctor
          Class: HolderSingleton --[HasProperty]--> Property: Instance
            Property: Instance
              Property: Instance --[Uses]--> Class: Nested
              Property: Instance --[ReferencesField]--> Field: Instance
Class: WrongCollection (Abstract=False)
  Class: WrongCollection --[HasField]--> Field: Observers
    Field: WrongCollection.Observers (public List)
  Class: WrongCollection --[HasMethod]--> Method: NotifyAll
    Method: NotifyAll (Returns Void, Abstract=False)
Class: SingleObserver (Abstract=False)
  Class: SingleObserver --[HasField]--> Field: _obs
    Field: SingleObserver._obs (private IObserverN3)
  Class: SingleObserver --[HasMethod]--> Method: Register
    Method: Register (Returns Void, Abstract=False)
      Method: Register --[ReferencesField]--> Field: _obs
  Class: SingleObserver --[HasMethod]--> Method: Trigger
    Method: Trigger (Returns Void, Abstract=False)
      Method: Trigger --[Calls]--> Method: Update
        Method: Update (Returns Void, Abstract=True)
      Method: Trigger --[ReferencesField]--> Field: _obs
Class: WrongNotify (Abstract=False)
  Class: WrongNotify --[HasField]--> Field: Observers
    Field: WrongNotify.Observers (public List)
  Class: WrongNotify --[HasMethod]--> Method: Notify
    Method: Notify (Returns Void, Abstract=False)
Class: FakePublisher (Abstract=False)
  Class: FakePublisher --[HasField]--> Field: Observers
    Field: FakePublisher.Observers (public List)
Class: SqlConnectionFactory (Abstract=False)
  Class: SqlConnectionFactory --[Inherits]--> Class: ConnectionFactory
    Class: ConnectionFactory (Abstract=True)
      Class: ConnectionFactory --[HasMethod]--> Method: GetName
        Method: GetName (Returns String, Abstract=True)
  Class: SqlConnectionFactory --[HasMethod]--> Method: GetName
    Method: GetName (Returns String, Abstract=False)
      Method: GetName --[Overrides]--> Method: GetName
Interface: IObserverN3
Interface: IObserverN2
Interface: IObserverN1
Method: GetName (Returns String, Abstract=True)
  Method: GetName --[ImplementedBy]--> Method: GetName
  Method: GetName --[ImplementedBy]--> Method: GetName
Method: Work (Returns Void, Abstract=True)
  Method: Work --[ImplementedBy]--> Method: Work
Method: Notify (Returns Void, Abstract=True)
  Method: Notify --[ImplementedBy]--> Method: Notify
Method: Play (Returns Void, Abstract=True)
  Method: Play --[ImplementedBy]--> Method: Play
Method: Request (Returns Void, Abstract=True)
  Method: Request --[ImplementedBy]--> Method: Request
Method: Request (Returns Void, Abstract=True)
  Method: Request --[ImplementedBy]--> Method: Request
Method: Save (Returns Void, Abstract=True)
  Method: Save --[ImplementedBy]--> Method: Save
Method: Draw (Returns Void, Abstract=True)
  Method: Draw --[ImplementedBy]--> Method: Draw
  Method: Draw --[ImplementedBy]--> Method: Draw
Method: Send (Returns Void, Abstract=True)
  Method: Send --[ImplementedBy]--> Method: Send
  Method: Send --[ImplementedBy]--> Method: Send
